
ROSA.elf:     file format elf32-avr32

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .reset        00000008  80000000  80000000  00000400  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rela.got     00000000  80000008  80000008  00000408  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .text         00001738  80000008  80000008  00000408  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .exception    00000400  80001800  80001800  00001c00  2**9
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 .rodata       00000084  80001c00  80001c00  00002000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .lalign       00000004  80001c84  80001c84  00002084  2**0
                  ALLOC
  6 .dalign       00000004  00000004  00000004  00000000  2**0
                  ALLOC
  7 .data         0000050c  00000008  80001c88  00002408  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .balign       00000004  00000514  80002194  00002914  2**0
                  ALLOC
  9 .bss          00000090  00000518  00000518  00000000  2**2
                  ALLOC
 10 .heap         0000da58  000005a8  000005a8  00000000  2**0
                  ALLOC
 11 .comment      000000bc  00000000  00000000  00002914  2**0
                  CONTENTS, READONLY
 12 .debug_aranges 00000598  00000000  00000000  000029d0  2**3
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_pubnames 00000946  00000000  00000000  00002f68  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_info   0000c232  00000000  00000000  000038ae  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_abbrev 00001fed  00000000  00000000  0000fae0  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_line   000040be  00000000  00000000  00011acd  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_frame  00000bb0  00000000  00000000  00015b8c  2**2
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00001c2e  00000000  00000000  0001673c  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_loc    0000183e  00000000  00000000  0001836a  2**0
                  CONTENTS, READONLY, DEBUGGING
 20 .debug_macinfo 00454a0e  00000000  00000000  00019ba8  2**0
                  CONTENTS, READONLY, DEBUGGING
 21 .appstack     00001000  0000e000  0000e000  00000000  2**0
                  ALLOC
 22 .stack        00001000  0000f000  0000f000  00000000  2**0
                  ALLOC
 23 .debug_ranges 000004e0  00000000  00000000  0046e5b6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .reset:

80000000 <_start>:
80000000:	48 1f       	lddpc	pc,80000004 <_start+0x4>
80000002:	00 00       	add	r0,r0
80000004:	80 00       	ld.sh	r0,r0[0x0]
80000006:	0e f8       	st.b	--r7,r8

Disassembly of section .text:

80000008 <usart_options>:
80000008:	00 00 e1 00 08 04 00 00 00 00 00 00 74 73 6b 33     ............tsk3
80000018:	00 00 00 00 74 73 6b 31 00 00 00 00 74 73 6b 32     ....tsk1....tsk2
80000028:	00 00 00 00                                         ....

8000002c <task1>:
8000002c:	eb cd 40 80 	pushm	r7,lr
80000030:	1a 97       	mov	r7,sp
80000032:	33 bc       	mov	r12,59
80000034:	f0 1f 00 08 	mcall	80000054 <task1+0x28>
80000038:	e0 6c 01 5e 	mov	r12,350
8000003c:	f0 1f 00 07 	mcall	80000058 <task1+0x2c>
80000040:	33 bc       	mov	r12,59
80000042:	f0 1f 00 07 	mcall	8000005c <task1+0x30>
80000046:	e0 6c 01 5e 	mov	r12,350
8000004a:	f0 1f 00 04 	mcall	80000058 <task1+0x2c>
8000004e:	f0 1f 00 05 	mcall	80000060 <task1+0x34>
80000052:	cf 0b       	rjmp	80000032 <task1+0x6>
80000054:	80 00       	ld.sh	r0,r0[0x0]
80000056:	0b 28       	ld.uh	r8,r5++
80000058:	80 00       	ld.sh	r0,r0[0x0]
8000005a:	09 20       	ld.uh	r0,r4++
8000005c:	80 00       	ld.sh	r0,r0[0x0]
8000005e:	0b 48       	ld.w	r8,--r5
80000060:	80 00       	ld.sh	r0,r0[0x0]
80000062:	07 2e       	ld.uh	lr,r3++

80000064 <task3>:
80000064:	eb cd 40 80 	pushm	r7,lr
80000068:	1a 97       	mov	r7,sp
8000006a:	33 dc       	mov	r12,61
8000006c:	f0 1f 00 0a 	mcall	80000094 <task3+0x30>
80000070:	e0 6c 01 5e 	mov	r12,350
80000074:	f0 1f 00 09 	mcall	80000098 <task3+0x34>
80000078:	33 dc       	mov	r12,61
8000007a:	f0 1f 00 09 	mcall	8000009c <task3+0x38>
8000007e:	e0 6c 01 5e 	mov	r12,350
80000082:	f0 1f 00 06 	mcall	80000098 <task3+0x34>
80000086:	48 7c       	lddpc	r12,800000a0 <task3+0x3c>
80000088:	f0 1f 00 07 	mcall	800000a4 <task3+0x40>
8000008c:	f0 1f 00 07 	mcall	800000a8 <task3+0x44>
80000090:	ce db       	rjmp	8000006a <task3+0x6>
80000092:	00 00       	add	r0,r0
80000094:	80 00       	ld.sh	r0,r0[0x0]
80000096:	0b 28       	ld.uh	r8,r5++
80000098:	80 00       	ld.sh	r0,r0[0x0]
8000009a:	09 20       	ld.uh	r0,r4++
8000009c:	80 00       	ld.sh	r0,r0[0x0]
8000009e:	0b 48       	ld.w	r8,--r5
800000a0:	00 00       	add	r0,r0
800000a2:	05 54       	ld.sh	r4,--r2
800000a4:	80 00       	ld.sh	r0,r0[0x0]
800000a6:	05 44       	ld.w	r4,--r2
800000a8:	80 00       	ld.sh	r0,r0[0x0]
800000aa:	07 2e       	ld.uh	lr,r3++

800000ac <task2>:
800000ac:	eb cd 40 80 	pushm	r7,lr
800000b0:	1a 97       	mov	r7,sp
800000b2:	33 cc       	mov	r12,60
800000b4:	f0 1f 00 12 	mcall	800000fc <task2+0x50>
800000b8:	e0 6c 01 5e 	mov	r12,350
800000bc:	f0 1f 00 11 	mcall	80000100 <task2+0x54>
800000c0:	33 cc       	mov	r12,60
800000c2:	f0 1f 00 11 	mcall	80000104 <task2+0x58>
800000c6:	e0 6c 01 5e 	mov	r12,350
800000ca:	f0 1f 00 0e 	mcall	80000100 <task2+0x54>
800000ce:	30 58       	mov	r8,5
800000d0:	32 09       	mov	r9,32
800000d2:	48 ea       	lddpc	r10,80000108 <task2+0x5c>
800000d4:	48 eb       	lddpc	r11,8000010c <task2+0x60>
800000d6:	48 fc       	lddpc	r12,80000110 <task2+0x64>
800000d8:	f0 1f 00 0f 	mcall	80000114 <task2+0x68>
800000dc:	33 cc       	mov	r12,60
800000de:	f0 1f 00 08 	mcall	800000fc <task2+0x50>
800000e2:	48 ec       	lddpc	r12,80000118 <task2+0x6c>
800000e4:	f0 1f 00 0e 	mcall	8000011c <task2+0x70>
800000e8:	33 cc       	mov	r12,60
800000ea:	f0 1f 00 07 	mcall	80000104 <task2+0x58>
800000ee:	e0 6c 01 5e 	mov	r12,350
800000f2:	f0 1f 00 04 	mcall	80000100 <task2+0x54>
800000f6:	f0 1f 00 0b 	mcall	80000120 <task2+0x74>
800000fa:	cd cb       	rjmp	800000b2 <task2+0x6>
800000fc:	80 00       	ld.sh	r0,r0[0x0]
800000fe:	0b 28       	ld.uh	r8,r5++
80000100:	80 00       	ld.sh	r0,r0[0x0]
80000102:	09 20       	ld.uh	r0,r4++
80000104:	80 00       	ld.sh	r0,r0[0x0]
80000106:	0b 48       	ld.w	r8,--r5
80000108:	80 00       	ld.sh	r0,r0[0x0]
8000010a:	00 64       	and	r4,r0
8000010c:	80 00       	ld.sh	r0,r0[0x0]
8000010e:	00 14       	sub	r4,r0
80000110:	00 00       	add	r0,r0
80000112:	05 54       	ld.sh	r4,--r2
80000114:	80 00       	ld.sh	r0,r0[0x0]
80000116:	04 58       	eor	r8,r2
80000118:	00 00       	add	r0,r0
8000011a:	05 5c       	ld.sh	r12,--r2
8000011c:	80 00       	ld.sh	r0,r0[0x0]
8000011e:	05 44       	ld.w	r4,--r2
80000120:	80 00       	ld.sh	r0,r0[0x0]
80000122:	07 2e       	ld.uh	lr,r3++

80000124 <main>:
80000124:	eb cd 40 80 	pushm	r7,lr
80000128:	1a 97       	mov	r7,sp
8000012a:	f0 1f 00 0c 	mcall	80000158 <main+0x34>
8000012e:	30 48       	mov	r8,4
80000130:	32 09       	mov	r9,32
80000132:	48 ba       	lddpc	r10,8000015c <main+0x38>
80000134:	48 bb       	lddpc	r11,80000160 <main+0x3c>
80000136:	48 cc       	lddpc	r12,80000164 <main+0x40>
80000138:	f0 1f 00 0c 	mcall	80000168 <main+0x44>
8000013c:	30 48       	mov	r8,4
8000013e:	32 09       	mov	r9,32
80000140:	48 ba       	lddpc	r10,8000016c <main+0x48>
80000142:	48 cb       	lddpc	r11,80000170 <main+0x4c>
80000144:	48 cc       	lddpc	r12,80000174 <main+0x50>
80000146:	f0 1f 00 09 	mcall	80000168 <main+0x44>
8000014a:	30 5c       	mov	r12,5
8000014c:	f0 1f 00 0b 	mcall	80000178 <main+0x54>
80000150:	f0 1f 00 0b 	mcall	8000017c <main+0x58>
80000154:	c0 08       	rjmp	80000154 <main+0x30>
80000156:	00 00       	add	r0,r0
80000158:	80 00       	ld.sh	r0,r0[0x0]
8000015a:	03 00       	ld.w	r0,r1++
8000015c:	80 00       	ld.sh	r0,r0[0x0]
8000015e:	00 2c       	rsub	r12,r0
80000160:	80 00       	ld.sh	r0,r0[0x0]
80000162:	00 1c       	sub	r12,r0
80000164:	00 00       	add	r0,r0
80000166:	05 60       	ld.uh	r0,--r2
80000168:	80 00       	ld.sh	r0,r0[0x0]
8000016a:	04 58       	eor	r8,r2
8000016c:	80 00       	ld.sh	r0,r0[0x0]
8000016e:	00 ac       	st.w	r0++,r12
80000170:	80 00       	ld.sh	r0,r0[0x0]
80000172:	00 24       	rsub	r4,r0
80000174:	00 00       	add	r0,r0
80000176:	05 5c       	ld.sh	r12,--r2
80000178:	80 00       	ld.sh	r0,r0[0x0]
8000017a:	0e 40       	or	r0,r7
8000017c:	80 00       	ld.sh	r0,r0[0x0]
8000017e:	07 98       	ld.ub	r8,r3[0x1]

80000180 <usart_options>:
80000180:	00 00 e1 00 08 04 00 00 00 00 00 00                 ............

8000018c <rqsearch>:
ROSA_taskHandle_t * PA[MAXNPRIO];

int rqi(ROSA_taskHandle_t ** th);  // Insert task th into queue pQ
int rqe(ROSA_taskHandle_t ** th); // Extract task th from queue pQ

int rqsearch(void) {
8000018c:	eb cd 40 80 	pushm	r7,lr
80000190:	1a 97       	mov	r7,sp
80000192:	20 1d       	sub	sp,4
	int i = MAXNPRIO;
80000194:	30 c8       	mov	r8,12
80000196:	ef 48 ff fc 	st.w	r7[-4],r8
	
	while (PA[--i] == NULL) {
8000019a:	ee f8 ff fc 	ld.w	r8,r7[-4]
8000019e:	20 18       	sub	r8,1
800001a0:	ef 48 ff fc 	st.w	r7[-4],r8
800001a4:	ee f9 ff fc 	ld.w	r9,r7[-4]
800001a8:	48 68       	lddpc	r8,800001c0 <rqsearch+0x34>
800001aa:	f0 09 03 28 	ld.w	r8,r8[r9<<0x2]
800001ae:	58 08       	cp.w	r8,0
800001b0:	cf 50       	breq	8000019a <rqsearch+0xe>
		;
	}
	
	return i;
800001b2:	ee f8 ff fc 	ld.w	r8,r7[-4]
}
800001b6:	10 9c       	mov	r12,r8
800001b8:	2f fd       	sub	sp,-4
800001ba:	e3 cd 80 80 	ldm	sp++,r7,pc
800001be:	00 00       	add	r0,r0
800001c0:	00 00       	add	r0,r0
800001c2:	05 68       	ld.uh	r8,--r2

800001c4 <rqi>:

int rqi(ROSA_taskHandle_t ** pth)
{
800001c4:	eb cd 40 80 	pushm	r7,lr
800001c8:	1a 97       	mov	r7,sp
800001ca:	20 2d       	sub	sp,8
800001cc:	ef 4c ff f8 	st.w	r7[-8],r12
	uint8_t priority;
	
	priority = (*pth)->priority;
800001d0:	ee f8 ff f8 	ld.w	r8,r7[-8]
800001d4:	70 08       	ld.w	r8,r8[0x0]
800001d6:	f1 38 00 64 	ld.ub	r8,r8[100]
800001da:	ef 68 ff ff 	st.b	r7[-1],r8
	
	if (PA[priority] == NULL) {
800001de:	ef 39 ff ff 	ld.ub	r9,r7[-1]
800001e2:	49 d8       	lddpc	r8,80000254 <rqi+0x90>
800001e4:	f0 09 03 28 	ld.w	r8,r8[r9<<0x2]
800001e8:	58 08       	cp.w	r8,0
800001ea:	c1 41       	brne	80000212 <rqi+0x4e>
		PA[priority] = *pth;
800001ec:	ef 39 ff ff 	ld.ub	r9,r7[-1]
800001f0:	ee f8 ff f8 	ld.w	r8,r7[-8]
800001f4:	70 0a       	ld.w	r10,r8[0x0]
800001f6:	49 88       	lddpc	r8,80000254 <rqi+0x90>
800001f8:	f0 09 09 2a 	st.w	r8[r9<<0x2],r10
		PA[priority]->nexttcb = *pth;
800001fc:	ef 39 ff ff 	ld.ub	r9,r7[-1]
80000200:	49 58       	lddpc	r8,80000254 <rqi+0x90>
80000202:	f0 09 03 28 	ld.w	r8,r8[r9<<0x2]
80000206:	ee f9 ff f8 	ld.w	r9,r7[-8]
8000020a:	72 09       	ld.w	r9,r9[0x0]
8000020c:	91 09       	st.w	r8[0x0],r9
		return 0;
8000020e:	30 08       	mov	r8,0
80000210:	c1 d8       	rjmp	8000024a <rqi+0x86>
	}
	else {
		(*pth)->nexttcb = PA[priority]->nexttcb;
80000212:	ee f8 ff f8 	ld.w	r8,r7[-8]
80000216:	70 08       	ld.w	r8,r8[0x0]
80000218:	ef 3a ff ff 	ld.ub	r10,r7[-1]
8000021c:	48 e9       	lddpc	r9,80000254 <rqi+0x90>
8000021e:	f2 0a 03 29 	ld.w	r9,r9[r10<<0x2]
80000222:	72 09       	ld.w	r9,r9[0x0]
80000224:	91 09       	st.w	r8[0x0],r9
		PA[priority]->nexttcb = *pth;
80000226:	ef 39 ff ff 	ld.ub	r9,r7[-1]
8000022a:	48 b8       	lddpc	r8,80000254 <rqi+0x90>
8000022c:	f0 09 03 28 	ld.w	r8,r8[r9<<0x2]
80000230:	ee f9 ff f8 	ld.w	r9,r7[-8]
80000234:	72 09       	ld.w	r9,r9[0x0]
80000236:	91 09       	st.w	r8[0x0],r9
		PA[priority] = *pth;
80000238:	ef 39 ff ff 	ld.ub	r9,r7[-1]
8000023c:	ee f8 ff f8 	ld.w	r8,r7[-8]
80000240:	70 0a       	ld.w	r10,r8[0x0]
80000242:	48 58       	lddpc	r8,80000254 <rqi+0x90>
80000244:	f0 09 09 2a 	st.w	r8[r9<<0x2],r10
		return 0;
80000248:	30 08       	mov	r8,0
	}
}
8000024a:	10 9c       	mov	r12,r8
8000024c:	2f ed       	sub	sp,-8
8000024e:	e3 cd 80 80 	ldm	sp++,r7,pc
80000252:	00 00       	add	r0,r0
80000254:	00 00       	add	r0,r0
80000256:	05 68       	ld.uh	r8,--r2

80000258 <rqe>:

int rqe(ROSA_taskHandle_t ** pth)
{
80000258:	eb cd 40 80 	pushm	r7,lr
8000025c:	1a 97       	mov	r7,sp
8000025e:	20 3d       	sub	sp,12
80000260:	ef 4c ff f4 	st.w	r7[-12],r12
	ROSA_taskHandle_t * thTmp;
	
	uint8_t priority;
	
	priority = (*pth)->priority;
80000264:	ee f8 ff f4 	ld.w	r8,r7[-12]
80000268:	70 08       	ld.w	r8,r8[0x0]
8000026a:	f1 38 00 64 	ld.ub	r8,r8[100]
8000026e:	ef 68 ff ff 	st.b	r7[-1],r8
	thTmp = PA[priority];
80000272:	ef 39 ff ff 	ld.ub	r9,r7[-1]
80000276:	4a 28       	lddpc	r8,800002fc <rqe+0xa4>
80000278:	f0 09 03 28 	ld.w	r8,r8[r9<<0x2]
8000027c:	ef 48 ff f8 	st.w	r7[-8],r8
	
	if ((*pth)->nexttcb == *pth) {
80000280:	ee f8 ff f4 	ld.w	r8,r7[-12]
80000284:	70 08       	ld.w	r8,r8[0x0]
80000286:	70 09       	ld.w	r9,r8[0x0]
80000288:	ee f8 ff f4 	ld.w	r8,r7[-12]
8000028c:	70 08       	ld.w	r8,r8[0x0]
8000028e:	10 39       	cp.w	r9,r8
80000290:	c0 f1       	brne	800002ae <rqe+0x56>
		PA[priority] = NULL;
80000292:	ef 39 ff ff 	ld.ub	r9,r7[-1]
80000296:	49 a8       	lddpc	r8,800002fc <rqe+0xa4>
80000298:	30 0a       	mov	r10,0
8000029a:	f0 09 09 2a 	st.w	r8[r9<<0x2],r10
		return 1;
8000029e:	30 18       	mov	r8,1
800002a0:	c2 98       	rjmp	800002f2 <rqe+0x9a>
	}
	else {
		while (thTmp->nexttcb != (*pth)) {
			thTmp = thTmp->nexttcb;
800002a2:	ee f8 ff f8 	ld.w	r8,r7[-8]
800002a6:	70 08       	ld.w	r8,r8[0x0]
800002a8:	ef 48 ff f8 	st.w	r7[-8],r8
800002ac:	c0 28       	rjmp	800002b0 <rqe+0x58>
	if ((*pth)->nexttcb == *pth) {
		PA[priority] = NULL;
		return 1;
	}
	else {
		while (thTmp->nexttcb != (*pth)) {
800002ae:	d7 03       	nop
800002b0:	ee f8 ff f8 	ld.w	r8,r7[-8]
800002b4:	70 09       	ld.w	r9,r8[0x0]
800002b6:	ee f8 ff f4 	ld.w	r8,r7[-12]
800002ba:	70 08       	ld.w	r8,r8[0x0]
800002bc:	10 39       	cp.w	r9,r8
800002be:	cf 21       	brne	800002a2 <rqe+0x4a>
			thTmp = thTmp->nexttcb;
		}
		if (PA[priority] == *pth) {
800002c0:	ef 39 ff ff 	ld.ub	r9,r7[-1]
800002c4:	48 e8       	lddpc	r8,800002fc <rqe+0xa4>
800002c6:	f0 09 03 29 	ld.w	r9,r8[r9<<0x2]
800002ca:	ee f8 ff f4 	ld.w	r8,r7[-12]
800002ce:	70 08       	ld.w	r8,r8[0x0]
800002d0:	10 39       	cp.w	r9,r8
800002d2:	c0 81       	brne	800002e2 <rqe+0x8a>
			PA[priority] = thTmp;
800002d4:	ef 39 ff ff 	ld.ub	r9,r7[-1]
800002d8:	48 98       	lddpc	r8,800002fc <rqe+0xa4>
800002da:	ee fa ff f8 	ld.w	r10,r7[-8]
800002de:	f0 09 09 2a 	st.w	r8[r9<<0x2],r10
		}
		thTmp->nexttcb = (*pth)->nexttcb;
800002e2:	ee f8 ff f4 	ld.w	r8,r7[-12]
800002e6:	70 08       	ld.w	r8,r8[0x0]
800002e8:	70 09       	ld.w	r9,r8[0x0]
800002ea:	ee f8 ff f8 	ld.w	r8,r7[-8]
800002ee:	91 09       	st.w	r8[0x0],r9
		return 0;
800002f0:	30 08       	mov	r8,0
	}
}
800002f2:	10 9c       	mov	r12,r8
800002f4:	2f dd       	sub	sp,-12
800002f6:	e3 cd 80 80 	ldm	sp++,r7,pc
800002fa:	00 00       	add	r0,r0
800002fc:	00 00       	add	r0,r0
800002fe:	05 68       	ld.uh	r8,--r2

80000300 <ROSA_init>:
 * Comment:
 * 	Initialize the ROSA system
 *
 **********************************************************/
void ROSA_init(void)
{
80000300:	eb cd 40 80 	pushm	r7,lr
80000304:	1a 97       	mov	r7,sp
80000306:	20 1d       	sub	sp,4
	int i = 0;
80000308:	30 08       	mov	r8,0
8000030a:	ef 48 ff fc 	st.w	r7[-4],r8
	
	//Do initialization of I/O drivers
	ledInit();									//LEDs
8000030e:	f0 1f 00 1b 	mcall	80000378 <ROSA_init+0x78>
	buttonInit();								//Buttons
80000312:	f0 1f 00 1b 	mcall	8000037c <ROSA_init+0x7c>
	joystickInit();								//Joystick
80000316:	f0 1f 00 1b 	mcall	80000380 <ROSA_init+0x80>
	potInit();									//Potentiometer
8000031a:	f0 1f 00 1b 	mcall	80000384 <ROSA_init+0x84>
	usartInit(USART, &usart_options, FOSC0);	//Serial communication
8000031e:	e0 6a 1b 00 	mov	r10,6912
80000322:	ea 1a 00 b7 	orh	r10,0xb7
80000326:	49 9b       	lddpc	r11,80000388 <ROSA_init+0x88>
80000328:	fe 7c 14 00 	mov	r12,-60416
8000032c:	f0 1f 00 18 	mcall	8000038c <ROSA_init+0x8c>

	//Start with empty TCBLIST and no EXECTASK.
	TCBLIST = NULL;
80000330:	49 88       	lddpc	r8,80000390 <ROSA_init+0x90>
80000332:	30 09       	mov	r9,0
80000334:	91 09       	st.w	r8[0x0],r9
	EXECTASK = NULL;
80000336:	49 88       	lddpc	r8,80000394 <ROSA_init+0x94>
80000338:	30 09       	mov	r9,0
8000033a:	91 09       	st.w	r8[0x0],r9
	PREEMPTASK = NULL;
8000033c:	49 78       	lddpc	r8,80000398 <ROSA_init+0x98>
8000033e:	30 09       	mov	r9,0
80000340:	91 09       	st.w	r8[0x0],r9
	CREATEDSEMAPHORELIST=NULL;
80000342:	49 78       	lddpc	r8,8000039c <ROSA_init+0x9c>
80000344:	30 09       	mov	r9,0
80000346:	91 09       	st.w	r8[0x0],r9
	
	for (i = 0; i < MAXNPRIO; i++) {
80000348:	30 08       	mov	r8,0
8000034a:	ef 48 ff fc 	st.w	r7[-4],r8
8000034e:	c0 c8       	rjmp	80000366 <ROSA_init+0x66>
		PA[i] = NULL;
80000350:	ee f9 ff fc 	ld.w	r9,r7[-4]
80000354:	49 38       	lddpc	r8,800003a0 <ROSA_init+0xa0>
80000356:	30 0a       	mov	r10,0
80000358:	f0 09 09 2a 	st.w	r8[r9<<0x2],r10
	TCBLIST = NULL;
	EXECTASK = NULL;
	PREEMPTASK = NULL;
	CREATEDSEMAPHORELIST=NULL;
	
	for (i = 0; i < MAXNPRIO; i++) {
8000035c:	ee f8 ff fc 	ld.w	r8,r7[-4]
80000360:	2f f8       	sub	r8,-1
80000362:	ef 48 ff fc 	st.w	r7[-4],r8
80000366:	ee f8 ff fc 	ld.w	r8,r7[-4]
8000036a:	58 b8       	cp.w	r8,11
8000036c:	fe 9a ff f2 	brle	80000350 <ROSA_init+0x50>
	
	//Initialize the timer to 100 ms period.
	//...
	//timerInit(100);
	//...
}
80000370:	2f fd       	sub	sp,-4
80000372:	e3 cd 80 80 	ldm	sp++,r7,pc
80000376:	00 00       	add	r0,r0
80000378:	80 00       	ld.sh	r0,r0[0x0]
8000037a:	0a 9c       	mov	r12,r5
8000037c:	80 00       	ld.sh	r0,r0[0x0]
8000037e:	08 c0       	st.b	r4++,r0
80000380:	80 00       	ld.sh	r0,r0[0x0]
80000382:	08 e8       	st.h	--r4,r8
80000384:	80 00       	ld.sh	r0,r0[0x0]
80000386:	0b 68       	ld.uh	r8,--r5
80000388:	80 00       	ld.sh	r0,r0[0x0]
8000038a:	01 80       	ld.ub	r0,r0[0x0]
8000038c:	80 00       	ld.sh	r0,r0[0x0]
8000038e:	0d 1c       	ld.sh	r12,r6++
80000390:	00 00       	add	r0,r0
80000392:	05 64       	ld.uh	r4,--r2
80000394:	00 00       	add	r0,r0
80000396:	05 9c       	ld.ub	r12,r2[0x1]
80000398:	00 00       	add	r0,r0
8000039a:	05 98       	ld.ub	r8,r2[0x1]
8000039c:	00 00       	add	r0,r0
8000039e:	05 50       	ld.sh	r0,--r2
800003a0:	00 00       	add	r0,r0
800003a2:	05 68       	ld.uh	r8,--r2

800003a4 <ROSA_tcbCreate>:
 * Comment:
 * 	Create the TCB with correct values.
 *
 **********************************************************/
void ROSA_tcbCreate(tcb * tcbTask, char tcbName[NAMESIZE], void *tcbFunction, int * tcbStack, int tcbStackSize)
{
800003a4:	eb cd 40 80 	pushm	r7,lr
800003a8:	1a 97       	mov	r7,sp
800003aa:	20 6d       	sub	sp,24
800003ac:	ef 4c ff f8 	st.w	r7[-8],r12
800003b0:	ef 4b ff f4 	st.w	r7[-12],r11
800003b4:	ef 4a ff f0 	st.w	r7[-16],r10
800003b8:	ef 49 ff ec 	st.w	r7[-20],r9
800003bc:	ef 48 ff e8 	st.w	r7[-24],r8
	int i;

	//Initialize the tcb with the correct values
	for(i = 0; i < NAMESIZE; i++) {
800003c0:	30 08       	mov	r8,0
800003c2:	ef 48 ff fc 	st.w	r7[-4],r8
800003c6:	c1 48       	rjmp	800003ee <ROSA_tcbCreate+0x4a>
		//Copy the id/name
		tcbTask->id[i] = tcbName[i];
800003c8:	ee f9 ff fc 	ld.w	r9,r7[-4]
800003cc:	ee f8 ff fc 	ld.w	r8,r7[-4]
800003d0:	ee fa ff f4 	ld.w	r10,r7[-12]
800003d4:	f4 08 00 08 	add	r8,r10,r8
800003d8:	11 88       	ld.ub	r8,r8[0x0]
800003da:	ee fa ff f8 	ld.w	r10,r7[-8]
800003de:	f4 09 00 09 	add	r9,r10,r9
800003e2:	b2 c8       	st.b	r9[0x4],r8
void ROSA_tcbCreate(tcb * tcbTask, char tcbName[NAMESIZE], void *tcbFunction, int * tcbStack, int tcbStackSize)
{
	int i;

	//Initialize the tcb with the correct values
	for(i = 0; i < NAMESIZE; i++) {
800003e4:	ee f8 ff fc 	ld.w	r8,r7[-4]
800003e8:	2f f8       	sub	r8,-1
800003ea:	ef 48 ff fc 	st.w	r7[-4],r8
800003ee:	ee f8 ff fc 	ld.w	r8,r7[-4]
800003f2:	58 38       	cp.w	r8,3
800003f4:	fe 9a ff ea 	brle	800003c8 <ROSA_tcbCreate+0x24>
		//Copy the id/name
		tcbTask->id[i] = tcbName[i];
	}

	//Dont link this TCB anywhere yet.
	tcbTask->nexttcb = NULL;
800003f8:	ee f8 ff f8 	ld.w	r8,r7[-8]
800003fc:	30 09       	mov	r9,0
800003fe:	91 09       	st.w	r8[0x0],r9

	//Set the task function start and return address.
	tcbTask->staddr = tcbFunction;
80000400:	ee f9 ff f0 	ld.w	r9,r7[-16]
80000404:	ee f8 ff f8 	ld.w	r8,r7[-8]
80000408:	91 29       	st.w	r8[0x8],r9
	tcbTask->retaddr = (int)tcbFunction;
8000040a:	ee f9 ff f0 	ld.w	r9,r7[-16]
8000040e:	ee f8 ff f8 	ld.w	r8,r7[-8]
80000412:	91 99       	st.w	r8[0x24],r9

	//Set up the stack.
	tcbTask->datasize = tcbStackSize;
80000414:	ee f8 ff f8 	ld.w	r8,r7[-8]
80000418:	ee f9 ff e8 	ld.w	r9,r7[-24]
8000041c:	91 49       	st.w	r8[0x10],r9
	tcbTask->dataarea = tcbStack + tcbStackSize;
8000041e:	ee f8 ff e8 	ld.w	r8,r7[-24]
80000422:	a3 68       	lsl	r8,0x2
80000424:	ee f9 ff ec 	ld.w	r9,r7[-20]
80000428:	10 09       	add	r9,r8
8000042a:	ee f8 ff f8 	ld.w	r8,r7[-8]
8000042e:	91 39       	st.w	r8[0xc],r9
	tcbTask->saveusp = tcbTask->dataarea;
80000430:	ee f8 ff f8 	ld.w	r8,r7[-8]
80000434:	70 39       	ld.w	r9,r8[0xc]
80000436:	ee f8 ff f8 	ld.w	r8,r7[-8]
8000043a:	91 59       	st.w	r8[0x14],r9

	//Set the initial SR.
	tcbTask->savesr = ROSA_INITIALSR;
8000043c:	ee f8 ff f8 	ld.w	r8,r7[-8]
80000440:	fc 19 00 1c 	movh	r9,0x1c
80000444:	91 89       	st.w	r8[0x20],r9

	//Initialize context.
	contextInit(tcbTask);
80000446:	ee fc ff f8 	ld.w	r12,r7[-8]
8000044a:	f0 1f 00 03 	mcall	80000454 <ROSA_tcbCreate+0xb0>
}
8000044e:	2f ad       	sub	sp,-24
80000450:	e3 cd 80 80 	ldm	sp++,r7,pc
80000454:	80 00       	ld.sh	r0,r0[0x0]
80000456:	06 a2       	st.w	r3++,r2

80000458 <ROSA_taskCreate>:
		tcbTask->nexttcb = TCBLIST;			//Make the list circular
	}
}

int16_t ROSA_taskCreate(ROSA_taskHandle_t ** pth, char * id, void* taskFunction, uint32_t stackSize, uint8_t priority)
{
80000458:	eb cd 40 80 	pushm	r7,lr
8000045c:	1a 97       	mov	r7,sp
8000045e:	20 6d       	sub	sp,24
80000460:	ef 4c ff f8 	st.w	r7[-8],r12
80000464:	ef 4b ff f4 	st.w	r7[-12],r11
80000468:	ef 4a ff f0 	st.w	r7[-16],r10
8000046c:	ef 49 ff ec 	st.w	r7[-20],r9
80000470:	ef 68 ff e8 	st.b	r7[-24],r8
	int * tcbStack;
	
	tcbStack = (int *) calloc(stackSize, sizeof(uint32_t)); 
80000474:	30 4b       	mov	r11,4
80000476:	ee fc ff ec 	ld.w	r12,r7[-20]
8000047a:	f0 1f 00 2b 	mcall	80000524 <ROSA_taskCreate+0xcc>
8000047e:	18 98       	mov	r8,r12
80000480:	ef 48 ff fc 	st.w	r7[-4],r8
	
	*pth = (ROSA_taskHandle_t *) malloc(sizeof(ROSA_taskHandle_t));			
80000484:	37 4c       	mov	r12,116
80000486:	f0 1f 00 29 	mcall	80000528 <ROSA_taskCreate+0xd0>
8000048a:	18 98       	mov	r8,r12
8000048c:	10 99       	mov	r9,r8
8000048e:	ee f8 ff f8 	ld.w	r8,r7[-8]
80000492:	91 09       	st.w	r8[0x0],r9
	(*pth)->priority = priority;
80000494:	ee f8 ff f8 	ld.w	r8,r7[-8]
80000498:	70 09       	ld.w	r9,r8[0x0]
8000049a:	ef 38 ff e8 	ld.ub	r8,r7[-24]
8000049e:	f3 68 00 64 	st.b	r9[100],r8
	(*pth)->delay = 0;
800004a2:	ee f8 ff f8 	ld.w	r8,r7[-8]
800004a6:	70 0a       	ld.w	r10,r8[0x0]
800004a8:	30 08       	mov	r8,0
800004aa:	30 09       	mov	r9,0
800004ac:	f4 e9 00 68 	st.d	r10[104],r8
	(*pth)->counter = 0;
800004b0:	ee f8 ff f8 	ld.w	r8,r7[-8]
800004b4:	70 09       	ld.w	r9,r8[0x0]
800004b6:	30 08       	mov	r8,0
800004b8:	f3 68 00 70 	st.b	r9[112],r8
	(*pth)->originalPriority = priority;
800004bc:	ee f8 ff f8 	ld.w	r8,r7[-8]
800004c0:	70 09       	ld.w	r9,r8[0x0]
800004c2:	ef 38 ff e8 	ld.ub	r8,r7[-24]
800004c6:	f3 68 00 71 	st.b	r9[113],r8
	
	ROSA_tcbCreate(*pth, id, taskFunction, tcbStack, stackSize);
800004ca:	ee f8 ff ec 	ld.w	r8,r7[-20]
800004ce:	ee f9 ff f8 	ld.w	r9,r7[-8]
800004d2:	72 0c       	ld.w	r12,r9[0x0]
800004d4:	ee f9 ff fc 	ld.w	r9,r7[-4]
800004d8:	ee fa ff f0 	ld.w	r10,r7[-16]
800004dc:	ee fb ff f4 	ld.w	r11,r7[-12]
800004e0:	f0 1f 00 13 	mcall	8000052c <ROSA_taskCreate+0xd4>
	
	rqi(pth);
800004e4:	ee fc ff f8 	ld.w	r12,r7[-8]
800004e8:	f0 1f 00 12 	mcall	80000530 <ROSA_taskCreate+0xd8>
	
	if (EXECTASK != NULL) {
800004ec:	49 28       	lddpc	r8,80000534 <ROSA_taskCreate+0xdc>
800004ee:	70 08       	ld.w	r8,r8[0x0]
800004f0:	58 08       	cp.w	r8,0
800004f2:	c1 40       	breq	8000051a <ROSA_taskCreate+0xc2>
		if (EXECTASK->priority < priority) {
800004f4:	49 08       	lddpc	r8,80000534 <ROSA_taskCreate+0xdc>
800004f6:	70 08       	ld.w	r8,r8[0x0]
800004f8:	f1 38 00 64 	ld.ub	r8,r8[100]
800004fc:	ef 39 ff e8 	ld.ub	r9,r7[-24]
80000500:	f0 09 18 00 	cp.b	r9,r8
80000504:	e0 88 00 0b 	brls	8000051a <ROSA_taskCreate+0xc2>
			PREEMPTASK = PA[priority];
80000508:	ef 39 ff e8 	ld.ub	r9,r7[-24]
8000050c:	48 b8       	lddpc	r8,80000538 <ROSA_taskCreate+0xe0>
8000050e:	f0 09 03 29 	ld.w	r9,r8[r9<<0x2]
80000512:	48 b8       	lddpc	r8,8000053c <ROSA_taskCreate+0xe4>
80000514:	91 09       	st.w	r8[0x0],r9
			ROSA_yield();
80000516:	f0 1f 00 0b 	mcall	80000540 <ROSA_taskCreate+0xe8>
		}	
	}
	
	return 0;
8000051a:	30 08       	mov	r8,0
}
8000051c:	10 9c       	mov	r12,r8
8000051e:	2f ad       	sub	sp,-24
80000520:	e3 cd 80 80 	ldm	sp++,r7,pc
80000524:	80 00       	ld.sh	r0,r0[0x0]
80000526:	0f 78       	ld.ub	r8,--r7
80000528:	80 00       	ld.sh	r0,r0[0x0]
8000052a:	10 08       	add	r8,r8
8000052c:	80 00       	ld.sh	r0,r0[0x0]
8000052e:	03 a4       	ld.ub	r4,r1[0x2]
80000530:	80 00       	ld.sh	r0,r0[0x0]
80000532:	01 c4       	ld.ub	r4,r0[0x4]
80000534:	00 00       	add	r0,r0
80000536:	05 9c       	ld.ub	r12,r2[0x1]
80000538:	00 00       	add	r0,r0
8000053a:	05 68       	ld.uh	r8,--r2
8000053c:	00 00       	add	r0,r0
8000053e:	05 98       	ld.ub	r8,r2[0x1]
80000540:	80 00       	ld.sh	r0,r0[0x0]
80000542:	07 2e       	ld.uh	lr,r3++

80000544 <ROSA_taskDelete>:

int16_t ROSA_taskDelete(ROSA_taskHandle_t ** pth)
{	
80000544:	eb cd 40 80 	pushm	r7,lr
80000548:	1a 97       	mov	r7,sp
8000054a:	20 2d       	sub	sp,8
8000054c:	ef 4c ff f8 	st.w	r7[-8],r12
	rqe(pth);
80000550:	ee fc ff f8 	ld.w	r12,r7[-8]
80000554:	f0 1f 00 3f 	mcall	80000650 <ROSA_taskDelete+0x10c>
	uint8_t priority;
	
	priority = (*pth)->priority;
80000558:	ee f8 ff f8 	ld.w	r8,r7[-8]
8000055c:	70 08       	ld.w	r8,r8[0x0]
8000055e:	f1 38 00 64 	ld.ub	r8,r8[100]
80000562:	ef 68 ff ff 	st.b	r7[-1],r8
	
	if (EXECTASK == (*pth)) {
80000566:	ee f8 ff f8 	ld.w	r8,r7[-8]
8000056a:	70 09       	ld.w	r9,r8[0x0]
8000056c:	4b a8       	lddpc	r8,80000654 <ROSA_taskDelete+0x110>
8000056e:	70 08       	ld.w	r8,r8[0x0]
80000570:	10 39       	cp.w	r9,r8
80000572:	c5 01       	brne	80000612 <ROSA_taskDelete+0xce>
		if (PA[priority] == NULL) {
80000574:	ef 39 ff ff 	ld.ub	r9,r7[-1]
80000578:	4b 88       	lddpc	r8,80000658 <ROSA_taskDelete+0x114>
8000057a:	f0 09 03 28 	ld.w	r8,r8[r9<<0x2]
8000057e:	58 08       	cp.w	r8,0
80000580:	c2 91       	brne	800005d2 <ROSA_taskDelete+0x8e>
			priority = rqsearch();
80000582:	f0 1f 00 37 	mcall	8000065c <ROSA_taskDelete+0x118>
80000586:	18 98       	mov	r8,r12
80000588:	ef 68 ff ff 	st.b	r7[-1],r8
			PREEMPTASK = PA[priority];
8000058c:	ef 39 ff ff 	ld.ub	r9,r7[-1]
80000590:	4b 28       	lddpc	r8,80000658 <ROSA_taskDelete+0x114>
80000592:	f0 09 03 29 	ld.w	r9,r8[r9<<0x2]
80000596:	4b 38       	lddpc	r8,80000660 <ROSA_taskDelete+0x11c>
80000598:	91 09       	st.w	r8[0x0],r9
			free( (*pth)->dataarea - (*pth)->datasize);
8000059a:	ee f8 ff f8 	ld.w	r8,r7[-8]
8000059e:	70 08       	ld.w	r8,r8[0x0]
800005a0:	70 39       	ld.w	r9,r8[0xc]
800005a2:	ee f8 ff f8 	ld.w	r8,r7[-8]
800005a6:	70 08       	ld.w	r8,r8[0x0]
800005a8:	70 48       	ld.w	r8,r8[0x10]
800005aa:	a3 68       	lsl	r8,0x2
800005ac:	5c 38       	neg	r8
800005ae:	f2 08 00 08 	add	r8,r9,r8
800005b2:	10 9c       	mov	r12,r8
800005b4:	f0 1f 00 2c 	mcall	80000664 <ROSA_taskDelete+0x120>
			free(*pth);
800005b8:	ee f8 ff f8 	ld.w	r8,r7[-8]
800005bc:	70 08       	ld.w	r8,r8[0x0]
800005be:	10 9c       	mov	r12,r8
800005c0:	f0 1f 00 29 	mcall	80000664 <ROSA_taskDelete+0x120>
			*pth = NULL;
800005c4:	ee f8 ff f8 	ld.w	r8,r7[-8]
800005c8:	30 09       	mov	r9,0
800005ca:	91 09       	st.w	r8[0x0],r9
			ROSA_yield();
800005cc:	f0 1f 00 27 	mcall	80000668 <ROSA_taskDelete+0x124>
800005d0:	c2 18       	rjmp	80000612 <ROSA_taskDelete+0xce>
		}		
		else {
			PREEMPTASK = EXECTASK->nexttcb;
800005d2:	4a 18       	lddpc	r8,80000654 <ROSA_taskDelete+0x110>
800005d4:	70 08       	ld.w	r8,r8[0x0]
800005d6:	70 09       	ld.w	r9,r8[0x0]
800005d8:	4a 28       	lddpc	r8,80000660 <ROSA_taskDelete+0x11c>
800005da:	91 09       	st.w	r8[0x0],r9
			free( (*pth)->dataarea - (*pth)->datasize);
800005dc:	ee f8 ff f8 	ld.w	r8,r7[-8]
800005e0:	70 08       	ld.w	r8,r8[0x0]
800005e2:	70 39       	ld.w	r9,r8[0xc]
800005e4:	ee f8 ff f8 	ld.w	r8,r7[-8]
800005e8:	70 08       	ld.w	r8,r8[0x0]
800005ea:	70 48       	ld.w	r8,r8[0x10]
800005ec:	a3 68       	lsl	r8,0x2
800005ee:	5c 38       	neg	r8
800005f0:	f2 08 00 08 	add	r8,r9,r8
800005f4:	10 9c       	mov	r12,r8
800005f6:	f0 1f 00 1c 	mcall	80000664 <ROSA_taskDelete+0x120>
			free(*pth);
800005fa:	ee f8 ff f8 	ld.w	r8,r7[-8]
800005fe:	70 08       	ld.w	r8,r8[0x0]
80000600:	10 9c       	mov	r12,r8
80000602:	f0 1f 00 19 	mcall	80000664 <ROSA_taskDelete+0x120>
			*pth = NULL;
80000606:	ee f8 ff f8 	ld.w	r8,r7[-8]
8000060a:	30 09       	mov	r9,0
8000060c:	91 09       	st.w	r8[0x0],r9
			ROSA_yield();
8000060e:	f0 1f 00 17 	mcall	80000668 <ROSA_taskDelete+0x124>
		}
	}
	
	free( (*pth)->dataarea - (*pth)->datasize);
80000612:	ee f8 ff f8 	ld.w	r8,r7[-8]
80000616:	70 08       	ld.w	r8,r8[0x0]
80000618:	70 39       	ld.w	r9,r8[0xc]
8000061a:	ee f8 ff f8 	ld.w	r8,r7[-8]
8000061e:	70 08       	ld.w	r8,r8[0x0]
80000620:	70 48       	ld.w	r8,r8[0x10]
80000622:	a3 68       	lsl	r8,0x2
80000624:	5c 38       	neg	r8
80000626:	f2 08 00 08 	add	r8,r9,r8
8000062a:	10 9c       	mov	r12,r8
8000062c:	f0 1f 00 0e 	mcall	80000664 <ROSA_taskDelete+0x120>
	free(*pth);
80000630:	ee f8 ff f8 	ld.w	r8,r7[-8]
80000634:	70 08       	ld.w	r8,r8[0x0]
80000636:	10 9c       	mov	r12,r8
80000638:	f0 1f 00 0b 	mcall	80000664 <ROSA_taskDelete+0x120>
	*pth = NULL;
8000063c:	ee f8 ff f8 	ld.w	r8,r7[-8]
80000640:	30 09       	mov	r9,0
80000642:	91 09       	st.w	r8[0x0],r9
	
	return 0;
80000644:	30 08       	mov	r8,0
80000646:	10 9c       	mov	r12,r8
80000648:	2f ed       	sub	sp,-8
8000064a:	e3 cd 80 80 	ldm	sp++,r7,pc
8000064e:	00 00       	add	r0,r0
80000650:	80 00       	ld.sh	r0,r0[0x0]
80000652:	02 58       	eor	r8,r1
80000654:	00 00       	add	r0,r0
80000656:	05 9c       	ld.ub	r12,r2[0x1]
80000658:	00 00       	add	r0,r0
8000065a:	05 68       	ld.uh	r8,--r2
8000065c:	80 00       	ld.sh	r0,r0[0x0]
8000065e:	01 8c       	ld.ub	r12,r0[0x0]
80000660:	00 00       	add	r0,r0
80000662:	05 98       	ld.ub	r8,r2[0x1]
80000664:	80 00       	ld.sh	r0,r0[0x0]
80000666:	0f f0       	ld.ub	r0,r7[0x7]
80000668:	80 00       	ld.sh	r0,r0[0x0]
8000066a:	07 2e       	ld.uh	lr,r3++

8000066c <ROSA_start>:
8000066c:	4b 5c       	lddpc	r12,80000740 <_yield+0xa>
8000066e:	4b 6b       	lddpc	r11,80000744 <_yield+0xe>
80000670:	78 0c       	ld.w	r12,r12[0x0]
80000672:	97 0c       	st.w	r11[0x0],r12
80000674:	78 50       	ld.w	r0,r12[0x14]
80000676:	1a d0       	st.w	--sp,r0
80000678:	e5 cd 20 00 	ldmts	sp,sp
8000067c:	1b 00       	ld.w	r0,sp++
8000067e:	78 2e       	ld.w	lr,r12[0x8]
80000680:	78 80       	ld.w	r0,r12[0x20]
80000682:	e3 b0 00 00 	mtsr	0x0,r0
80000686:	79 80       	ld.w	r0,r12[0x60]
80000688:	79 71       	ld.w	r1,r12[0x5c]
8000068a:	79 62       	ld.w	r2,r12[0x58]
8000068c:	79 53       	ld.w	r3,r12[0x54]
8000068e:	79 44       	ld.w	r4,r12[0x50]
80000690:	79 35       	ld.w	r5,r12[0x4c]
80000692:	79 26       	ld.w	r6,r12[0x48]
80000694:	79 17       	ld.w	r7,r12[0x44]
80000696:	79 08       	ld.w	r8,r12[0x40]
80000698:	78 f9       	ld.w	r9,r12[0x3c]
8000069a:	78 ea       	ld.w	r10,r12[0x38]
8000069c:	78 db       	ld.w	r11,r12[0x34]
8000069e:	78 cc       	ld.w	r12,r12[0x30]
800006a0:	1c 9f       	mov	pc,lr

800006a2 <contextInit>:
800006a2:	78 20       	ld.w	r0,r12[0x8]
800006a4:	99 a0       	st.w	r12[0x28],r0
800006a6:	30 00       	mov	r0,0
800006a8:	f9 40 00 60 	st.w	r12[96],r0
800006ac:	f9 40 00 5c 	st.w	r12[92],r0
800006b0:	f9 40 00 58 	st.w	r12[88],r0
800006b4:	f9 40 00 54 	st.w	r12[84],r0
800006b8:	f9 40 00 50 	st.w	r12[80],r0
800006bc:	f9 40 00 4c 	st.w	r12[76],r0
800006c0:	f9 40 00 48 	st.w	r12[72],r0
800006c4:	f9 40 00 44 	st.w	r12[68],r0
800006c8:	f9 40 00 40 	st.w	r12[64],r0
800006cc:	99 f0       	st.w	r12[0x3c],r0
800006ce:	99 e0       	st.w	r12[0x38],r0
800006d0:	99 d0       	st.w	r12[0x34],r0
800006d2:	99 c0       	st.w	r12[0x30],r0
800006d4:	1c 9f       	mov	pc,lr

800006d6 <contextSave>:
800006d6:	d2 01       	pushm	r12
800006d8:	49 bc       	lddpc	r12,80000744 <_yield+0xe>
800006da:	78 0c       	ld.w	r12,r12[0x0]
800006dc:	99 60       	st.w	r12[0x18],r0
800006de:	99 71       	st.w	r12[0x1c],r1
800006e0:	1b 00       	ld.w	r0,sp++
800006e2:	99 c0       	st.w	r12[0x30],r0
800006e4:	7a 00       	ld.w	r0,sp[0x0]
800006e6:	99 80       	st.w	r12[0x20],r0
800006e8:	33 40       	mov	r0,52
800006ea:	18 00       	add	r0,r12
800006ec:	ed c0 0f ff 	stmts	r0,r0-r11
800006f0:	1a 90       	mov	r0,sp
800006f2:	1a d0       	st.w	--sp,r0
800006f4:	ed cd 20 00 	stmts	sp,sp
800006f8:	1b 01       	ld.w	r1,sp++
800006fa:	62 00       	ld.w	r0,r1[0x0]
800006fc:	99 90       	st.w	r12[0x24],r0
800006fe:	99 a0       	st.w	r12[0x28],r0
80000700:	2f c1       	sub	r1,-4
80000702:	99 51       	st.w	r12[0x14],r1
80000704:	1c 9f       	mov	pc,lr

80000706 <contextRestore>:
80000706:	49 0c       	lddpc	r12,80000744 <_yield+0xe>
80000708:	78 0c       	ld.w	r12,r12[0x0]
8000070a:	78 51       	ld.w	r1,r12[0x14]
8000070c:	1a d1       	st.w	--sp,r1
8000070e:	e5 cd 20 00 	ldmts	sp,sp
80000712:	1b 01       	ld.w	r1,sp++
80000714:	78 ae       	ld.w	lr,r12[0x28]
80000716:	78 90       	ld.w	r0,r12[0x24]
80000718:	9b 10       	st.w	sp[0x4],r0
8000071a:	33 40       	mov	r0,52
8000071c:	18 00       	add	r0,r12
8000071e:	e5 c0 0f ff 	ldmts	r0,r0-r11
80000722:	78 80       	ld.w	r0,r12[0x20]
80000724:	9b 00       	st.w	sp[0x0],r0
80000726:	78 60       	ld.w	r0,r12[0x18]
80000728:	78 71       	ld.w	r1,r12[0x1c]
8000072a:	78 cc       	ld.w	r12,r12[0x30]
8000072c:	d6 13       	rets

8000072e <ROSA_yield>:
8000072e:	d4 01       	pushm	lr
80000730:	fe ce ff fa 	sub	lr,pc,-6
80000734:	d7 33       	scall

80000736 <_yield>:
80000736:	cd 0f       	rcall	800006d6 <contextSave>
80000738:	f0 1f 00 04 	mcall	80000748 <_yield+0x12>
8000073c:	ce 5f       	rcall	80000706 <contextRestore>
8000073e:	00 00       	add	r0,r0
80000740:	00 00       	add	r0,r0
80000742:	05 64       	ld.uh	r4,--r2
80000744:	00 00       	add	r0,r0
80000746:	05 9c       	ld.ub	r12,r2[0x1]
80000748:	80 00       	ld.sh	r0,r0[0x0]
8000074a:	07 4c       	ld.w	r12,--r3

8000074c <scheduler>:
8000074c:	eb cd 40 80 	pushm	r7,lr
80000750:	1a 97       	mov	r7,sp
80000752:	48 f8       	lddpc	r8,8000078c <scheduler+0x40>
80000754:	70 08       	ld.w	r8,r8[0x0]
80000756:	58 08       	cp.w	r8,0
80000758:	c1 11       	brne	8000077a <scheduler+0x2e>
8000075a:	48 e8       	lddpc	r8,80000790 <scheduler+0x44>
8000075c:	70 08       	ld.w	r8,r8[0x0]
8000075e:	f1 38 00 64 	ld.ub	r8,r8[100]
80000762:	10 99       	mov	r9,r8
80000764:	48 b8       	lddpc	r8,80000790 <scheduler+0x44>
80000766:	70 0a       	ld.w	r10,r8[0x0]
80000768:	48 b8       	lddpc	r8,80000794 <scheduler+0x48>
8000076a:	f0 09 09 2a 	st.w	r8[r9<<0x2],r10
8000076e:	48 98       	lddpc	r8,80000790 <scheduler+0x44>
80000770:	70 08       	ld.w	r8,r8[0x0]
80000772:	70 09       	ld.w	r9,r8[0x0]
80000774:	48 78       	lddpc	r8,80000790 <scheduler+0x44>
80000776:	91 09       	st.w	r8[0x0],r9
80000778:	c0 88       	rjmp	80000788 <scheduler+0x3c>
8000077a:	48 58       	lddpc	r8,8000078c <scheduler+0x40>
8000077c:	70 09       	ld.w	r9,r8[0x0]
8000077e:	48 58       	lddpc	r8,80000790 <scheduler+0x44>
80000780:	91 09       	st.w	r8[0x0],r9
80000782:	48 38       	lddpc	r8,8000078c <scheduler+0x40>
80000784:	30 09       	mov	r9,0
80000786:	91 09       	st.w	r8[0x0],r9
80000788:	e3 cd 80 80 	ldm	sp++,r7,pc
8000078c:	00 00       	add	r0,r0
8000078e:	05 98       	ld.ub	r8,r2[0x1]
80000790:	00 00       	add	r0,r0
80000792:	05 9c       	ld.ub	r12,r2[0x1]
80000794:	00 00       	add	r0,r0
80000796:	05 68       	ld.uh	r8,--r2

80000798 <ROSA_startScheduler>:
80000798:	eb cd 40 80 	pushm	r7,lr
8000079c:	1a 97       	mov	r7,sp
8000079e:	20 1d       	sub	sp,4
800007a0:	30 c8       	mov	r8,12
800007a2:	ef 48 ff fc 	st.w	r7[-4],r8
800007a6:	ee f8 ff fc 	ld.w	r8,r7[-4]
800007aa:	20 18       	sub	r8,1
800007ac:	ef 48 ff fc 	st.w	r7[-4],r8
800007b0:	ee f9 ff fc 	ld.w	r9,r7[-4]
800007b4:	48 98       	lddpc	r8,800007d8 <ROSA_startScheduler+0x40>
800007b6:	f0 09 03 28 	ld.w	r8,r8[r9<<0x2]
800007ba:	58 08       	cp.w	r8,0
800007bc:	cf 50       	breq	800007a6 <ROSA_startScheduler+0xe>
800007be:	ee f9 ff fc 	ld.w	r9,r7[-4]
800007c2:	48 68       	lddpc	r8,800007d8 <ROSA_startScheduler+0x40>
800007c4:	f0 09 03 28 	ld.w	r8,r8[r9<<0x2]
800007c8:	70 09       	ld.w	r9,r8[0x0]
800007ca:	48 58       	lddpc	r8,800007dc <ROSA_startScheduler+0x44>
800007cc:	91 09       	st.w	r8[0x0],r9
800007ce:	f0 1f 00 05 	mcall	800007e0 <ROSA_startScheduler+0x48>
800007d2:	2f fd       	sub	sp,-4
800007d4:	e3 cd 80 80 	ldm	sp++,r7,pc
800007d8:	00 00       	add	r0,r0
800007da:	05 68       	ld.uh	r8,--r2
800007dc:	00 00       	add	r0,r0
800007de:	05 64       	ld.uh	r4,--r2
800007e0:	80 00       	ld.sh	r0,r0[0x0]
800007e2:	06 6c       	and	r12,r3

800007e4 <C.0.9414>:
800007e4:	00 00 00 02 00 00 00 08 00 00 00 20 00 00 00 80     ........... ....

800007f4 <timerISR>:
800007f4:	eb cd 40 80 	pushm	r7,lr
800007f8:	1a 97       	mov	r7,sp
800007fa:	20 2d       	sub	sp,8
800007fc:	fe 78 38 00 	mov	r8,-51200
80000800:	ef 48 ff fc 	st.w	r7[-4],r8
80000804:	ee f8 ff fc 	ld.w	r8,r7[-4]
80000808:	70 88       	ld.w	r8,r8[0x20]
8000080a:	ef 48 ff f8 	st.w	r7[-8],r8
8000080e:	2f ed       	sub	sp,-8
80000810:	e3 cd 40 80 	ldm	sp++,r7,lr
80000814:	d6 03       	rete
80000816:	d7 03       	nop

80000818 <timerPeriodSet>:
80000818:	eb cd 40 80 	pushm	r7,lr
8000081c:	1a 97       	mov	r7,sp
8000081e:	20 7d       	sub	sp,28
80000820:	ef 4c ff e4 	st.w	r7[-28],r12
80000824:	4a 48       	lddpc	r8,800008b4 <timerPeriodSet+0x9c>
80000826:	ee ca 00 18 	sub	r10,r7,24
8000082a:	10 9b       	mov	r11,r8
8000082c:	f6 e8 00 00 	ld.d	r8,r11[0]
80000830:	f4 e9 00 00 	st.d	r10[0],r8
80000834:	f6 e8 00 08 	ld.d	r8,r11[8]
80000838:	f4 e9 00 08 	st.d	r10[8],r8
8000083c:	30 48       	mov	r8,4
8000083e:	ef 48 ff fc 	st.w	r7[-4],r8
80000842:	ee f8 ff fc 	ld.w	r8,r7[-4]
80000846:	20 18       	sub	r8,1
80000848:	a3 68       	lsl	r8,0x2
8000084a:	ee 08 00 08 	add	r8,r7,r8
8000084e:	f0 f9 ff e8 	ld.w	r9,r8[-24]
80000852:	e0 68 1b 00 	mov	r8,6912
80000856:	ea 18 00 b7 	orh	r8,0xb7
8000085a:	f0 09 0c 08 	divs	r8,r8,r9
8000085e:	10 99       	mov	r9,r8
80000860:	ee f8 ff e4 	ld.w	r8,r7[-28]
80000864:	b1 39       	mul	r9,r8
80000866:	e0 68 4d d3 	mov	r8,19923
8000086a:	ea 18 10 62 	orh	r8,0x1062
8000086e:	f2 08 06 48 	mulu.d	r8,r9,r8
80000872:	f2 08 16 06 	lsr	r8,r9,0x6
80000876:	ef 48 ff f8 	st.w	r7[-8],r8
8000087a:	ee fc ff fc 	ld.w	r12,r7[-4]
8000087e:	f0 1f 00 0f 	mcall	800008b8 <timerPeriodSet+0xa0>
80000882:	ee fc ff f8 	ld.w	r12,r7[-8]
80000886:	f0 1f 00 0e 	mcall	800008bc <timerPeriodSet+0xa4>
8000088a:	ee f9 ff f8 	ld.w	r9,r7[-8]
8000088e:	ee f8 ff fc 	ld.w	r8,r7[-4]
80000892:	f2 08 02 4a 	mul	r10,r9,r8
80000896:	e0 68 9f 81 	mov	r8,40833
8000089a:	ea 18 16 5e 	orh	r8,0x165e
8000089e:	f4 08 04 48 	muls.d	r8,r10,r8
800008a2:	b5 49       	asr	r9,0x14
800008a4:	f4 08 14 1f 	asr	r8,r10,0x1f
800008a8:	f2 08 01 08 	sub	r8,r9,r8
800008ac:	10 9c       	mov	r12,r8
800008ae:	2f 9d       	sub	sp,-28
800008b0:	e3 cd 80 80 	ldm	sp++,r7,pc
800008b4:	80 00       	ld.sh	r0,r0[0x0]
800008b6:	07 e4       	ld.ub	r4,r3[0x6]
800008b8:	80 00       	ld.sh	r0,r0[0x0]
800008ba:	0e b4       	st.h	r7++,r4
800008bc:	80 00       	ld.sh	r0,r0[0x0]
800008be:	0e 9e       	mov	lr,r7

800008c0 <buttonInit>:
800008c0:	eb cd 40 80 	pushm	r7,lr
800008c4:	1a 97       	mov	r7,sp
800008c6:	30 1b       	mov	r11,1
800008c8:	35 8c       	mov	r12,88
800008ca:	f0 1f 00 07 	mcall	800008e4 <buttonInit+0x24>
800008ce:	30 1b       	mov	r11,1
800008d0:	35 5c       	mov	r12,85
800008d2:	f0 1f 00 05 	mcall	800008e4 <buttonInit+0x24>
800008d6:	30 1b       	mov	r11,1
800008d8:	35 2c       	mov	r12,82
800008da:	f0 1f 00 03 	mcall	800008e4 <buttonInit+0x24>
800008de:	e3 cd 80 80 	ldm	sp++,r7,pc
800008e2:	00 00       	add	r0,r0
800008e4:	80 00       	ld.sh	r0,r0[0x0]
800008e6:	09 54       	ld.sh	r4,--r4

800008e8 <joystickInit>:
800008e8:	eb cd 40 80 	pushm	r7,lr
800008ec:	1a 97       	mov	r7,sp
800008ee:	30 1b       	mov	r11,1
800008f0:	31 bc       	mov	r12,27
800008f2:	f0 1f 00 0b 	mcall	8000091c <joystickInit+0x34>
800008f6:	30 1b       	mov	r11,1
800008f8:	31 9c       	mov	r12,25
800008fa:	f0 1f 00 09 	mcall	8000091c <joystickInit+0x34>
800008fe:	30 1b       	mov	r11,1
80000900:	31 cc       	mov	r12,28
80000902:	f0 1f 00 07 	mcall	8000091c <joystickInit+0x34>
80000906:	30 1b       	mov	r11,1
80000908:	31 4c       	mov	r12,20
8000090a:	f0 1f 00 05 	mcall	8000091c <joystickInit+0x34>
8000090e:	30 1b       	mov	r11,1
80000910:	31 ac       	mov	r12,26
80000912:	f0 1f 00 03 	mcall	8000091c <joystickInit+0x34>
80000916:	e3 cd 80 80 	ldm	sp++,r7,pc
8000091a:	00 00       	add	r0,r0
8000091c:	80 00       	ld.sh	r0,r0[0x0]
8000091e:	09 54       	ld.sh	r4,--r4

80000920 <delay_ms>:
80000920:	eb cd 40 80 	pushm	r7,lr
80000924:	1a 97       	mov	r7,sp
80000926:	20 2d       	sub	sp,8
80000928:	ef 4c ff f8 	st.w	r7[-8],r12
8000092c:	ee f8 ff f8 	ld.w	r8,r7[-8]
80000930:	e0 69 04 42 	mov	r9,1090
80000934:	b3 38       	mul	r8,r9
80000936:	ef 48 ff fc 	st.w	r7[-4],r8
8000093a:	c0 68       	rjmp	80000946 <delay_ms+0x26>
8000093c:	ee f8 ff fc 	ld.w	r8,r7[-4]
80000940:	20 18       	sub	r8,1
80000942:	ef 48 ff fc 	st.w	r7[-4],r8
80000946:	ee f8 ff fc 	ld.w	r8,r7[-4]
8000094a:	58 08       	cp.w	r8,0
8000094c:	cf 81       	brne	8000093c <delay_ms+0x1c>
8000094e:	2f ed       	sub	sp,-8
80000950:	e3 cd 80 80 	ldm	sp++,r7,pc

80000954 <gpioInit>:
80000954:	eb cd 40 80 	pushm	r7,lr
80000958:	1a 97       	mov	r7,sp
8000095a:	20 7d       	sub	sp,28
8000095c:	ef 4c ff ec 	st.w	r7[-20],r12
80000960:	ef 4b ff e8 	st.w	r7[-24],r11
80000964:	ee f8 ff ec 	ld.w	r8,r7[-20]
80000968:	a5 58       	asr	r8,0x5
8000096a:	ef 48 ff f4 	st.w	r7[-12],r8
8000096e:	ee f8 ff ec 	ld.w	r8,r7[-20]
80000972:	f1 d8 c0 05 	bfextu	r8,r8,0x0,0x5
80000976:	ef 48 ff fc 	st.w	r7[-4],r8
8000097a:	30 19       	mov	r9,1
8000097c:	ee f8 ff fc 	ld.w	r8,r7[-4]
80000980:	f2 08 09 48 	lsl	r8,r9,r8
80000984:	ef 48 ff f8 	st.w	r7[-8],r8
80000988:	ee f8 ff f4 	ld.w	r8,r7[-12]
8000098c:	a9 68       	lsl	r8,0x8
8000098e:	e0 28 f0 00 	sub	r8,61440
80000992:	ef 48 ff f0 	st.w	r7[-16],r8
80000996:	ee f9 ff f8 	ld.w	r9,r7[-8]
8000099a:	ee f8 ff f0 	ld.w	r8,r7[-16]
8000099e:	91 19       	st.w	r8[0x4],r9
800009a0:	ee f9 ff f8 	ld.w	r9,r7[-8]
800009a4:	ee f8 ff f0 	ld.w	r8,r7[-16]
800009a8:	91 69       	st.w	r8[0x18],r9
800009aa:	ee f9 ff f8 	ld.w	r9,r7[-8]
800009ae:	ee f8 ff f0 	ld.w	r8,r7[-16]
800009b2:	91 a9       	st.w	r8[0x28],r9
800009b4:	ee f8 ff e8 	ld.w	r8,r7[-24]
800009b8:	ef 48 ff e4 	st.w	r7[-28],r8
800009bc:	ee f8 ff e4 	ld.w	r8,r7[-28]
800009c0:	58 08       	cp.w	r8,0
800009c2:	c0 60       	breq	800009ce <gpioInit+0x7a>
800009c4:	ee f8 ff e4 	ld.w	r8,r7[-28]
800009c8:	58 18       	cp.w	r8,1
800009ca:	c0 90       	breq	800009dc <gpioInit+0x88>
800009cc:	c0 f8       	rjmp	800009ea <gpioInit+0x96>
800009ce:	ee f9 ff f8 	ld.w	r9,r7[-8]
800009d2:	ee f8 ff f0 	ld.w	r8,r7[-16]
800009d6:	f1 49 00 44 	st.w	r8[68],r9
800009da:	c0 e8       	rjmp	800009f6 <gpioInit+0xa2>
800009dc:	ee f9 ff f8 	ld.w	r9,r7[-8]
800009e0:	ee f8 ff f0 	ld.w	r8,r7[-16]
800009e4:	f1 49 00 48 	st.w	r8[72],r9
800009e8:	c0 78       	rjmp	800009f6 <gpioInit+0xa2>
800009ea:	ee f9 ff f8 	ld.w	r9,r7[-8]
800009ee:	ee f8 ff f0 	ld.w	r8,r7[-16]
800009f2:	f1 49 00 48 	st.w	r8[72],r9
800009f6:	2f 9d       	sub	sp,-28
800009f8:	e3 cd 80 80 	ldm	sp++,r7,pc

800009fc <gpioClear>:
800009fc:	eb cd 40 80 	pushm	r7,lr
80000a00:	1a 97       	mov	r7,sp
80000a02:	20 5d       	sub	sp,20
80000a04:	ef 4c ff ec 	st.w	r7[-20],r12
80000a08:	ee f8 ff ec 	ld.w	r8,r7[-20]
80000a0c:	a5 58       	asr	r8,0x5
80000a0e:	ef 48 ff f4 	st.w	r7[-12],r8
80000a12:	ee f8 ff ec 	ld.w	r8,r7[-20]
80000a16:	f1 d8 c0 05 	bfextu	r8,r8,0x0,0x5
80000a1a:	ef 48 ff fc 	st.w	r7[-4],r8
80000a1e:	30 19       	mov	r9,1
80000a20:	ee f8 ff fc 	ld.w	r8,r7[-4]
80000a24:	f2 08 09 48 	lsl	r8,r9,r8
80000a28:	ef 48 ff f8 	st.w	r7[-8],r8
80000a2c:	ee f8 ff f4 	ld.w	r8,r7[-12]
80000a30:	a9 68       	lsl	r8,0x8
80000a32:	e0 28 f0 00 	sub	r8,61440
80000a36:	ef 48 ff f0 	st.w	r7[-16],r8
80000a3a:	ee f9 ff f8 	ld.w	r9,r7[-8]
80000a3e:	ee f8 ff f0 	ld.w	r8,r7[-16]
80000a42:	f1 49 00 58 	st.w	r8[88],r9
80000a46:	2f bd       	sub	sp,-20
80000a48:	e3 cd 80 80 	ldm	sp++,r7,pc

80000a4c <gpioSet>:
80000a4c:	eb cd 40 80 	pushm	r7,lr
80000a50:	1a 97       	mov	r7,sp
80000a52:	20 5d       	sub	sp,20
80000a54:	ef 4c ff ec 	st.w	r7[-20],r12
80000a58:	ee f8 ff ec 	ld.w	r8,r7[-20]
80000a5c:	a5 58       	asr	r8,0x5
80000a5e:	ef 48 ff f4 	st.w	r7[-12],r8
80000a62:	ee f8 ff ec 	ld.w	r8,r7[-20]
80000a66:	f1 d8 c0 05 	bfextu	r8,r8,0x0,0x5
80000a6a:	ef 48 ff fc 	st.w	r7[-4],r8
80000a6e:	30 19       	mov	r9,1
80000a70:	ee f8 ff fc 	ld.w	r8,r7[-4]
80000a74:	f2 08 09 48 	lsl	r8,r9,r8
80000a78:	ef 48 ff f8 	st.w	r7[-8],r8
80000a7c:	ee f8 ff f4 	ld.w	r8,r7[-12]
80000a80:	a9 68       	lsl	r8,0x8
80000a82:	e0 28 f0 00 	sub	r8,61440
80000a86:	ef 48 ff f0 	st.w	r7[-16],r8
80000a8a:	ee f9 ff f8 	ld.w	r9,r7[-8]
80000a8e:	ee f8 ff f0 	ld.w	r8,r7[-16]
80000a92:	f1 49 00 54 	st.w	r8[84],r9
80000a96:	2f bd       	sub	sp,-20
80000a98:	e3 cd 80 80 	ldm	sp++,r7,pc

80000a9c <ledInit>:
80000a9c:	eb cd 40 80 	pushm	r7,lr
80000aa0:	1a 97       	mov	r7,sp
80000aa2:	20 9d       	sub	sp,36
80000aa4:	49 e8       	lddpc	r8,80000b1c <ledInit+0x80>
80000aa6:	ee cb 00 24 	sub	r11,r7,36
80000aaa:	10 9a       	mov	r10,r8
80000aac:	f4 e8 00 00 	ld.d	r8,r10[0]
80000ab0:	f6 e9 00 00 	st.d	r11[0],r8
80000ab4:	f4 e8 00 08 	ld.d	r8,r10[8]
80000ab8:	f6 e9 00 08 	st.d	r11[8],r8
80000abc:	f4 e8 00 10 	ld.d	r8,r10[16]
80000ac0:	f6 e9 00 10 	st.d	r11[16],r8
80000ac4:	f4 e8 00 18 	ld.d	r8,r10[24]
80000ac8:	f6 e9 00 18 	st.d	r11[24],r8
80000acc:	30 08       	mov	r8,0
80000ace:	ef 48 ff fc 	st.w	r7[-4],r8
80000ad2:	ee f8 ff fc 	ld.w	r8,r7[-4]
80000ad6:	a3 68       	lsl	r8,0x2
80000ad8:	ee 08 00 08 	add	r8,r7,r8
80000adc:	f0 f8 ff dc 	ld.w	r8,r8[-36]
80000ae0:	10 9c       	mov	r12,r8
80000ae2:	f0 1f 00 10 	mcall	80000b20 <ledInit+0x84>
80000ae6:	ee f8 ff fc 	ld.w	r8,r7[-4]
80000aea:	a3 68       	lsl	r8,0x2
80000aec:	ee 08 00 08 	add	r8,r7,r8
80000af0:	f0 f8 ff dc 	ld.w	r8,r8[-36]
80000af4:	30 0b       	mov	r11,0
80000af6:	10 9c       	mov	r12,r8
80000af8:	f0 1f 00 0b 	mcall	80000b24 <ledInit+0x88>
80000afc:	ee f8 ff fc 	ld.w	r8,r7[-4]
80000b00:	58 78       	cp.w	r8,7
80000b02:	5f 18       	srne	r8
80000b04:	f3 d8 c0 08 	bfextu	r9,r8,0x0,0x8
80000b08:	ee f8 ff fc 	ld.w	r8,r7[-4]
80000b0c:	2f f8       	sub	r8,-1
80000b0e:	ef 48 ff fc 	st.w	r7[-4],r8
80000b12:	58 09       	cp.w	r9,0
80000b14:	cd f1       	brne	80000ad2 <ledInit+0x36>
80000b16:	2f 7d       	sub	sp,-36
80000b18:	e3 cd 80 80 	ldm	sp++,r7,pc
80000b1c:	80 00       	ld.sh	r0,r0[0x0]
80000b1e:	1c 00       	add	r0,lr
80000b20:	80 00       	ld.sh	r0,r0[0x0]
80000b22:	0b 48       	ld.w	r8,--r5
80000b24:	80 00       	ld.sh	r0,r0[0x0]
80000b26:	09 54       	ld.sh	r4,--r4

80000b28 <ledOn>:
80000b28:	eb cd 40 80 	pushm	r7,lr
80000b2c:	1a 97       	mov	r7,sp
80000b2e:	20 1d       	sub	sp,4
80000b30:	ef 4c ff fc 	st.w	r7[-4],r12
80000b34:	ee fc ff fc 	ld.w	r12,r7[-4]
80000b38:	f0 1f 00 03 	mcall	80000b44 <ledOn+0x1c>
80000b3c:	2f fd       	sub	sp,-4
80000b3e:	e3 cd 80 80 	ldm	sp++,r7,pc
80000b42:	00 00       	add	r0,r0
80000b44:	80 00       	ld.sh	r0,r0[0x0]
80000b46:	09 fc       	ld.ub	r12,r4[0x7]

80000b48 <ledOff>:
80000b48:	eb cd 40 80 	pushm	r7,lr
80000b4c:	1a 97       	mov	r7,sp
80000b4e:	20 1d       	sub	sp,4
80000b50:	ef 4c ff fc 	st.w	r7[-4],r12
80000b54:	ee fc ff fc 	ld.w	r12,r7[-4]
80000b58:	f0 1f 00 03 	mcall	80000b64 <ledOff+0x1c>
80000b5c:	2f fd       	sub	sp,-4
80000b5e:	e3 cd 80 80 	ldm	sp++,r7,pc
80000b62:	00 00       	add	r0,r0
80000b64:	80 00       	ld.sh	r0,r0[0x0]
80000b66:	0a 4c       	or	r12,r5

80000b68 <potInit>:
80000b68:	d3 01       	pushm	r11-r12
80000b6a:	e0 6c 10 00 	mov	r12,4096
80000b6e:	ea 1c ff ff 	orh	r12,0xffff
80000b72:	31 6b       	mov	r11,22
80000b74:	99 2b       	st.w	r12[0x8],r11
80000b76:	99 6b       	st.w	r12[0x18],r11
80000b78:	99 6b       	st.w	r12[0x18],r11
80000b7a:	e0 6c 3c 00 	mov	r12,15360
80000b7e:	ea 1c ff ff 	orh	r12,0xffff
80000b82:	30 1b       	mov	r11,1
80000b84:	99 0b       	st.w	r12[0x0],r11
80000b86:	e0 6b 0f 1f 	mov	r11,3871
80000b8a:	b1 6b       	lsl	r11,0x10
80000b8c:	99 1b       	st.w	r12[0x4],r11
80000b8e:	30 2b       	mov	r11,2
80000b90:	99 4b       	st.w	r12[0x10],r11
80000b92:	d3 02       	popm	r11-r12
80000b94:	1c 9f       	mov	pc,lr

80000b96 <potGetValue>:
80000b96:	d1 81       	pushm	r10-r11
80000b98:	e0 6c 3c 00 	mov	r12,15360
80000b9c:	ea 1c ff ff 	orh	r12,0xffff
80000ba0:	30 2b       	mov	r11,2
80000ba2:	99 0b       	st.w	r12[0x0],r11

80000ba4 <a1>:
80000ba4:	78 7a       	ld.w	r10,r12[0x1c]
80000ba6:	16 7a       	tst	r10,r11
80000ba8:	cf e0       	breq	80000ba4 <a1>
80000baa:	78 dc       	ld.w	r12,r12[0x34]
80000bac:	d1 82       	popm	r10-r11
80000bae:	1c 9f       	mov	pc,lr

80000bb0 <usartReset>:
80000bb0:	eb cd 40 80 	pushm	r7,lr
80000bb4:	1a 97       	mov	r7,sp
80000bb6:	20 3d       	sub	sp,12
80000bb8:	ef 4c ff f8 	st.w	r7[-8],r12
80000bbc:	f0 1f 00 16 	mcall	80000c14 <usartReset+0x64>
80000bc0:	18 98       	mov	r8,r12
80000bc2:	ef 48 ff fc 	st.w	r7[-4],r8
80000bc6:	ee f8 ff fc 	ld.w	r8,r7[-4]
80000bca:	58 08       	cp.w	r8,0
80000bcc:	c0 30       	breq	80000bd2 <usartReset+0x22>
80000bce:	f0 1f 00 13 	mcall	80000c18 <usartReset+0x68>
80000bd2:	ee f9 ff f8 	ld.w	r9,r7[-8]
80000bd6:	3f f8       	mov	r8,-1
80000bd8:	93 38       	st.w	r9[0xc],r8
80000bda:	ee f8 ff f8 	ld.w	r8,r7[-8]
80000bde:	70 58       	ld.w	r8,r8[0x14]
80000be0:	ee f8 ff fc 	ld.w	r8,r7[-4]
80000be4:	58 08       	cp.w	r8,0
80000be6:	c0 30       	breq	80000bec <usartReset+0x3c>
80000be8:	f0 1f 00 0d 	mcall	80000c1c <usartReset+0x6c>
80000bec:	ee f9 ff f8 	ld.w	r9,r7[-8]
80000bf0:	30 08       	mov	r8,0
80000bf2:	93 18       	st.w	r9[0x4],r8
80000bf4:	ee f9 ff f8 	ld.w	r9,r7[-8]
80000bf8:	30 08       	mov	r8,0
80000bfa:	93 98       	st.w	r9[0x24],r8
80000bfc:	ee f9 ff f8 	ld.w	r9,r7[-8]
80000c00:	30 08       	mov	r8,0
80000c02:	93 a8       	st.w	r9[0x28],r8
80000c04:	ee f9 ff f8 	ld.w	r9,r7[-8]
80000c08:	ea 68 61 0c 	mov	r8,680204
80000c0c:	93 08       	st.w	r9[0x0],r8
80000c0e:	2f dd       	sub	sp,-12
80000c10:	e3 cd 80 80 	ldm	sp++,r7,pc
80000c14:	80 00       	ld.sh	r0,r0[0x0]
80000c16:	19 6e       	ld.uh	lr,--r12
80000c18:	80 00       	ld.sh	r0,r0[0x0]
80000c1a:	19 66       	ld.uh	r6,--r12
80000c1c:	80 00       	ld.sh	r0,r0[0x0]
80000c1e:	19 6a       	ld.uh	r10,--r12

80000c20 <usartSetBaudrate>:
80000c20:	eb cd 40 80 	pushm	r7,lr
80000c24:	1a 97       	mov	r7,sp
80000c26:	20 bd       	sub	sp,44
80000c28:	ef 4c ff ec 	st.w	r7[-20],r12
80000c2c:	ef 4b ff e8 	st.w	r7[-24],r11
80000c30:	ef 4a ff e4 	st.w	r7[-28],r10
80000c34:	ee f8 ff e8 	ld.w	r8,r7[-24]
80000c38:	f0 09 15 04 	lsl	r9,r8,0x4
80000c3c:	ee f8 ff e4 	ld.w	r8,r7[-28]
80000c40:	10 39       	cp.w	r9,r8
80000c42:	e0 8b 00 06 	brhi	80000c4e <usartSetBaudrate+0x2e>
80000c46:	31 09       	mov	r9,16
80000c48:	ef 49 ff d4 	st.w	r7[-44],r9
80000c4c:	c0 48       	rjmp	80000c54 <usartSetBaudrate+0x34>
80000c4e:	30 88       	mov	r8,8
80000c50:	ef 48 ff d4 	st.w	r7[-44],r8
80000c54:	ee f9 ff d4 	ld.w	r9,r7[-44]
80000c58:	ef 49 ff f0 	st.w	r7[-16],r9
80000c5c:	ee f8 ff e4 	ld.w	r8,r7[-28]
80000c60:	f0 0a 15 03 	lsl	r10,r8,0x3
80000c64:	ee f9 ff f0 	ld.w	r9,r7[-16]
80000c68:	ee f8 ff e8 	ld.w	r8,r7[-24]
80000c6c:	f2 08 02 48 	mul	r8,r9,r8
80000c70:	a1 98       	lsr	r8,0x1
80000c72:	10 0a       	add	r10,r8
80000c74:	ee f9 ff f0 	ld.w	r9,r7[-16]
80000c78:	ee f8 ff e8 	ld.w	r8,r7[-24]
80000c7c:	f2 08 02 48 	mul	r8,r9,r8
80000c80:	f4 08 0d 08 	divu	r8,r10,r8
80000c84:	ef 48 ff f4 	st.w	r7[-12],r8
80000c88:	ee f8 ff f4 	ld.w	r8,r7[-12]
80000c8c:	a3 98       	lsr	r8,0x3
80000c8e:	ef 48 ff f8 	st.w	r7[-8],r8
80000c92:	ee f8 ff f4 	ld.w	r8,r7[-12]
80000c96:	f1 d8 c0 03 	bfextu	r8,r8,0x0,0x3
80000c9a:	ef 48 ff fc 	st.w	r7[-4],r8
80000c9e:	ee f8 ff f8 	ld.w	r8,r7[-8]
80000ca2:	58 08       	cp.w	r8,0
80000ca4:	c0 70       	breq	80000cb2 <usartSetBaudrate+0x92>
80000ca6:	ee f8 ff f8 	ld.w	r8,r7[-8]
80000caa:	e0 48 ff ff 	cp.w	r8,65535
80000cae:	e0 88 00 06 	brls	80000cba <usartSetBaudrate+0x9a>
80000cb2:	30 18       	mov	r8,1
80000cb4:	ef 48 ff d8 	st.w	r7[-40],r8
80000cb8:	c2 c8       	rjmp	80000d10 <usartSetBaudrate+0xf0>
80000cba:	ee f8 ff ec 	ld.w	r8,r7[-20]
80000cbe:	70 18       	ld.w	r8,r8[0x4]
80000cc0:	10 99       	mov	r9,r8
80000cc2:	e4 19 ff f7 	andh	r9,0xfff7
80000cc6:	e0 19 fe cf 	andl	r9,0xfecf
80000cca:	ef 49 ff dc 	st.w	r7[-36],r9
80000cce:	ee f8 ff f0 	ld.w	r8,r7[-16]
80000cd2:	59 08       	cp.w	r8,16
80000cd4:	c0 60       	breq	80000ce0 <usartSetBaudrate+0xc0>
80000cd6:	e8 68 00 00 	mov	r8,524288
80000cda:	ef 48 ff e0 	st.w	r7[-32],r8
80000cde:	c0 48       	rjmp	80000ce6 <usartSetBaudrate+0xc6>
80000ce0:	30 09       	mov	r9,0
80000ce2:	ef 49 ff e0 	st.w	r7[-32],r9
80000ce6:	ee f9 ff dc 	ld.w	r9,r7[-36]
80000cea:	ee f8 ff e0 	ld.w	r8,r7[-32]
80000cee:	10 49       	or	r9,r8
80000cf0:	ee f8 ff ec 	ld.w	r8,r7[-20]
80000cf4:	91 19       	st.w	r8[0x4],r9
80000cf6:	ee f8 ff fc 	ld.w	r8,r7[-4]
80000cfa:	f0 09 15 10 	lsl	r9,r8,0x10
80000cfe:	ee f8 ff f8 	ld.w	r8,r7[-8]
80000d02:	10 49       	or	r9,r8
80000d04:	ee f8 ff ec 	ld.w	r8,r7[-20]
80000d08:	91 89       	st.w	r8[0x20],r9
80000d0a:	30 09       	mov	r9,0
80000d0c:	ef 49 ff d8 	st.w	r7[-40],r9
80000d10:	ee f8 ff d8 	ld.w	r8,r7[-40]
80000d14:	10 9c       	mov	r12,r8
80000d16:	2f 5d       	sub	sp,-44
80000d18:	e3 cd 80 80 	ldm	sp++,r7,pc

80000d1c <usartInit>:
80000d1c:	eb cd 40 80 	pushm	r7,lr
80000d20:	1a 97       	mov	r7,sp
80000d22:	20 4d       	sub	sp,16
80000d24:	ef 4c ff f8 	st.w	r7[-8],r12
80000d28:	ef 4b ff f4 	st.w	r7[-12],r11
80000d2c:	ef 4a ff f0 	st.w	r7[-16],r10
80000d30:	fe 78 10 00 	mov	r8,-61440
80000d34:	ef 48 ff fc 	st.w	r7[-4],r8
80000d38:	ee f9 ff fc 	ld.w	r9,r7[-4]
80000d3c:	30 18       	mov	r8,1
80000d3e:	93 28       	st.w	r9[0x8],r8
80000d40:	ee f9 ff fc 	ld.w	r9,r7[-4]
80000d44:	30 28       	mov	r8,2
80000d46:	93 28       	st.w	r9[0x8],r8
80000d48:	ee fc ff f8 	ld.w	r12,r7[-8]
80000d4c:	f0 1f 00 3b 	mcall	80000e38 <usartInit+0x11c>
80000d50:	ee f9 ff f0 	ld.w	r9,r7[-16]
80000d54:	ee f8 ff f4 	ld.w	r8,r7[-12]
80000d58:	70 08       	ld.w	r8,r8[0x0]
80000d5a:	12 9a       	mov	r10,r9
80000d5c:	10 9b       	mov	r11,r8
80000d5e:	ee fc ff f8 	ld.w	r12,r7[-8]
80000d62:	f0 1f 00 37 	mcall	80000e3c <usartInit+0x120>
80000d66:	ee f8 ff f4 	ld.w	r8,r7[-12]
80000d6a:	11 c9       	ld.ub	r9,r8[0x4]
80000d6c:	30 98       	mov	r8,9
80000d6e:	f0 09 18 00 	cp.b	r9,r8
80000d72:	c0 a1       	brne	80000d86 <usartInit+0x6a>
80000d74:	ee f8 ff f8 	ld.w	r8,r7[-8]
80000d78:	70 18       	ld.w	r8,r8[0x4]
80000d7a:	10 99       	mov	r9,r8
80000d7c:	b1 b9       	sbr	r9,0x11
80000d7e:	ee f8 ff f8 	ld.w	r8,r7[-8]
80000d82:	91 19       	st.w	r8[0x4],r9
80000d84:	c0 d8       	rjmp	80000d9e <usartInit+0x82>
80000d86:	ee f8 ff f8 	ld.w	r8,r7[-8]
80000d8a:	70 19       	ld.w	r9,r8[0x4]
80000d8c:	ee f8 ff f4 	ld.w	r8,r7[-12]
80000d90:	11 c8       	ld.ub	r8,r8[0x4]
80000d92:	20 58       	sub	r8,5
80000d94:	a7 68       	lsl	r8,0x6
80000d96:	10 49       	or	r9,r8
80000d98:	ee f8 ff f8 	ld.w	r8,r7[-8]
80000d9c:	91 19       	st.w	r8[0x4],r9
80000d9e:	ee f8 ff f8 	ld.w	r8,r7[-8]
80000da2:	70 1a       	ld.w	r10,r8[0x4]
80000da4:	ee f8 ff f4 	ld.w	r8,r7[-12]
80000da8:	11 d8       	ld.ub	r8,r8[0x5]
80000daa:	f0 09 15 09 	lsl	r9,r8,0x9
80000dae:	ee f8 ff f4 	ld.w	r8,r7[-12]
80000db2:	f1 38 00 08 	ld.ub	r8,r8[8]
80000db6:	af 68       	lsl	r8,0xe
80000db8:	f3 e8 10 08 	or	r8,r9,r8
80000dbc:	f5 e8 10 09 	or	r9,r10,r8
80000dc0:	ee f8 ff f8 	ld.w	r8,r7[-8]
80000dc4:	91 19       	st.w	r8[0x4],r9
80000dc6:	ee f8 ff f4 	ld.w	r8,r7[-12]
80000dca:	90 39       	ld.sh	r9,r8[0x6]
80000dcc:	30 28       	mov	r8,2
80000dce:	f0 09 19 00 	cp.h	r9,r8
80000dd2:	e0 88 00 14 	brls	80000dfa <usartInit+0xde>
80000dd6:	ee f8 ff f8 	ld.w	r8,r7[-8]
80000dda:	70 18       	ld.w	r8,r8[0x4]
80000ddc:	10 99       	mov	r9,r8
80000dde:	ad b9       	sbr	r9,0xd
80000de0:	ee f8 ff f8 	ld.w	r8,r7[-8]
80000de4:	91 19       	st.w	r8[0x4],r9
80000de6:	ee f8 ff f4 	ld.w	r8,r7[-12]
80000dea:	90 38       	ld.sh	r8,r8[0x6]
80000dec:	5c 78       	castu.h	r8
80000dee:	20 28       	sub	r8,2
80000df0:	10 99       	mov	r9,r8
80000df2:	ee f8 ff f8 	ld.w	r8,r7[-8]
80000df6:	91 a9       	st.w	r8[0x28],r9
80000df8:	c0 d8       	rjmp	80000e12 <usartInit+0xf6>
80000dfa:	ee f8 ff f8 	ld.w	r8,r7[-8]
80000dfe:	70 19       	ld.w	r9,r8[0x4]
80000e00:	ee f8 ff f4 	ld.w	r8,r7[-12]
80000e04:	90 38       	ld.sh	r8,r8[0x6]
80000e06:	5c 78       	castu.h	r8
80000e08:	ad 68       	lsl	r8,0xc
80000e0a:	10 49       	or	r9,r8
80000e0c:	ee f8 ff f8 	ld.w	r8,r7[-8]
80000e10:	91 19       	st.w	r8[0x4],r9
80000e12:	ee f8 ff f8 	ld.w	r8,r7[-8]
80000e16:	70 18       	ld.w	r8,r8[0x4]
80000e18:	10 99       	mov	r9,r8
80000e1a:	e0 19 ff f0 	andl	r9,0xfff0
80000e1e:	ee f8 ff f8 	ld.w	r8,r7[-8]
80000e22:	91 19       	st.w	r8[0x4],r9
80000e24:	ee f9 ff f8 	ld.w	r9,r7[-8]
80000e28:	35 08       	mov	r8,80
80000e2a:	93 08       	st.w	r9[0x0],r8
80000e2c:	30 08       	mov	r8,0
80000e2e:	10 9c       	mov	r12,r8
80000e30:	2f cd       	sub	sp,-16
80000e32:	e3 cd 80 80 	ldm	sp++,r7,pc
80000e36:	00 00       	add	r0,r0
80000e38:	80 00       	ld.sh	r0,r0[0x0]
80000e3a:	0b b0       	ld.ub	r0,r5[0x3]
80000e3c:	80 00       	ld.sh	r0,r0[0x0]
80000e3e:	0c 20       	rsub	r0,r6

80000e40 <timerInit>:
80000e40:	d5 01       	pushm	r11,lr
80000e42:	d2 01       	pushm	r12
80000e44:	f0 1f 00 28 	mcall	80000ee4 <timerClearInterrupt+0x10>
80000e48:	f0 1f 00 28 	mcall	80000ee8 <timerClearInterrupt+0x14>
80000e4c:	e0 6c 38 00 	mov	r12,14336
80000e50:	ea 1c ff ff 	orh	r12,0xffff
80000e54:	e0 6b c0 00 	mov	r11,49152
80000e58:	ea 1b 00 00 	orh	r11,0x0
80000e5c:	99 1b       	st.w	r12[0x4],r11
80000e5e:	30 1b       	mov	r11,1
80000e60:	a5 6b       	lsl	r11,0x4
80000e62:	99 9b       	st.w	r12[0x24],r11
80000e64:	d2 02       	popm	r12
80000e66:	f0 1f 00 22 	mcall	80000eec <timerClearInterrupt+0x18>
80000e6a:	d5 02       	popm	r11,lr
80000e6c:	1c 9f       	mov	pc,lr

80000e6e <timerReset>:
80000e6e:	d3 01       	pushm	r11-r12
80000e70:	e0 6c 38 00 	mov	r12,14336
80000e74:	ea 1c ff ff 	orh	r12,0xffff
80000e78:	30 5b       	mov	r11,5
80000e7a:	99 0b       	st.w	r12[0x0],r11
80000e7c:	e0 6b 00 08 	mov	r11,8
80000e80:	ea 1b 00 00 	orh	r11,0x0
80000e84:	76 0b       	ld.w	r11,r11[0x0]
80000e86:	99 7b       	st.w	r12[0x1c],r11
80000e88:	d3 02       	popm	r11-r12
80000e8a:	1c 9f       	mov	pc,lr

80000e8c <timerStop>:
80000e8c:	d3 01       	pushm	r11-r12
80000e8e:	e0 6c 38 00 	mov	r12,14336
80000e92:	ea 1c ff ff 	orh	r12,0xffff
80000e96:	30 2b       	mov	r11,2
80000e98:	99 0b       	st.w	r12[0x0],r11
80000e9a:	d3 02       	popm	r11-r12
80000e9c:	1c 9f       	mov	pc,lr

80000e9e <timerRCSet>:
80000e9e:	d3 01       	pushm	r11-r12
80000ea0:	49 4b       	lddpc	r11,80000ef0 <timerClearInterrupt+0x1c>
80000ea2:	97 0c       	st.w	r11[0x0],r12
80000ea4:	e0 6c 38 00 	mov	r12,14336
80000ea8:	ea 1c ff ff 	orh	r12,0xffff
80000eac:	76 0b       	ld.w	r11,r11[0x0]
80000eae:	99 7b       	st.w	r12[0x1c],r11
80000eb0:	d3 02       	popm	r11-r12
80000eb2:	1c 9f       	mov	pc,lr

80000eb4 <timerPrescaleSet>:
80000eb4:	d3 81       	pushm	r10-r12
80000eb6:	49 0b       	lddpc	r11,80000ef4 <timerClearInterrupt+0x20>
80000eb8:	97 0c       	st.w	r11[0x0],r12
80000eba:	e0 6c 38 00 	mov	r12,14336
80000ebe:	ea 1c ff ff 	orh	r12,0xffff
80000ec2:	78 1a       	ld.w	r10,r12[0x4]
80000ec4:	3f 8b       	mov	r11,-8
80000ec6:	16 6a       	and	r10,r11
80000ec8:	48 bb       	lddpc	r11,80000ef4 <timerClearInterrupt+0x20>
80000eca:	76 0b       	ld.w	r11,r11[0x0]
80000ecc:	14 4b       	or	r11,r10
80000ece:	99 1b       	st.w	r12[0x4],r11
80000ed0:	d3 82       	popm	r10-r12
80000ed2:	1c 9f       	mov	pc,lr

80000ed4 <timerClearInterrupt>:
80000ed4:	d2 01       	pushm	r12
80000ed6:	e0 6c 38 00 	mov	r12,14336
80000eda:	ea 1c ff ff 	orh	r12,0xffff
80000ede:	78 8c       	ld.w	r12,r12[0x20]
80000ee0:	d2 02       	popm	r12
80000ee2:	1c 9f       	mov	pc,lr
80000ee4:	80 00       	ld.sh	r0,r0[0x0]
80000ee6:	19 66       	ld.uh	r6,--r12
80000ee8:	80 00       	ld.sh	r0,r0[0x0]
80000eea:	0e d4       	st.w	--r7,r4
80000eec:	80 00       	ld.sh	r0,r0[0x0]
80000eee:	08 18       	sub	r8,r4
80000ef0:	00 00       	add	r0,r0
80000ef2:	00 08       	add	r8,r0
80000ef4:	00 00       	add	r0,r0
80000ef6:	00 0c       	add	r12,r0

80000ef8 <_stext>:
80000ef8:	49 7d       	lddpc	sp,80000f54 <udata_end+0x4>
80000efa:	49 80       	lddpc	r0,80000f58 <udata_end+0x8>
80000efc:	1a d0       	st.w	--sp,r0
80000efe:	e5 cd 20 00 	ldmts	sp,sp
80000f02:	1b 00       	ld.w	r0,sp++
80000f04:	49 60       	lddpc	r0,80000f5c <udata_end+0xc>
80000f06:	e3 b0 00 01 	mtsr	0x4,r0
80000f0a:	d5 53       	csrf	0x15
80000f0c:	e0 6c 0c 00 	mov	r12,3072
80000f10:	ea 1c ff ff 	orh	r12,0xffff
80000f14:	e0 6b 01 07 	mov	r11,263
80000f18:	99 ab       	st.w	r12[0x28],r11
80000f1a:	30 4b       	mov	r11,4
80000f1c:	99 0b       	st.w	r12[0x0],r11
80000f1e:	e0 6a 00 80 	mov	r10,128

80000f22 <xw8>:
80000f22:	79 5b       	ld.w	r11,r12[0x54]
80000f24:	14 7b       	tst	r11,r10
80000f26:	cf e0       	breq	80000f22 <xw8>
80000f28:	30 5b       	mov	r11,5
80000f2a:	99 0b       	st.w	r12[0x0],r11

80000f2c <idata_>:
80000f2c:	48 d0       	lddpc	r0,80000f60 <udata_end+0x10>
80000f2e:	48 e1       	lddpc	r1,80000f64 <udata_end+0x14>
80000f30:	02 30       	cp.w	r0,r1
80000f32:	c0 62       	brcc	80000f3e <idata_end>
80000f34:	48 d2       	lddpc	r2,80000f68 <udata_end+0x18>

80000f36 <idata_loop>:
80000f36:	05 04       	ld.w	r4,r2++
80000f38:	00 a4       	st.w	r0++,r4
80000f3a:	02 30       	cp.w	r0,r1
80000f3c:	cf d3       	brcs	80000f36 <idata_loop>

80000f3e <idata_end>:
80000f3e:	48 c0       	lddpc	r0,80000f6c <udata_end+0x1c>
80000f40:	48 c1       	lddpc	r1,80000f70 <udata_end+0x20>
80000f42:	02 30       	cp.w	r0,r1
80000f44:	c0 62       	brcc	80000f50 <udata_end>
80000f46:	30 02       	mov	r2,0
80000f48:	30 03       	mov	r3,0

80000f4a <udata_loop>:
80000f4a:	00 a2       	st.w	r0++,r2
80000f4c:	02 30       	cp.w	r0,r1
80000f4e:	cf e3       	brcs	80000f4a <udata_loop>

80000f50 <udata_end>:
80000f50:	48 9f       	lddpc	pc,80000f74 <udata_end+0x24>
80000f52:	00 00       	add	r0,r0
80000f54:	00 01       	add	r1,r0
80000f56:	00 00       	add	r0,r0
80000f58:	00 00       	add	r0,r0
80000f5a:	f0 00       	*unknown*
80000f5c:	80 00       	ld.sh	r0,r0[0x0]
80000f5e:	18 00       	add	r0,r12
80000f60:	00 00       	add	r0,r0
80000f62:	00 08       	add	r8,r0
80000f64:	00 00       	add	r0,r0
80000f66:	05 18       	ld.sh	r8,r2++
80000f68:	80 00       	ld.sh	r0,r0[0x0]
80000f6a:	1c 88       	andn	r8,lr
80000f6c:	00 00       	add	r0,r0
80000f6e:	05 18       	ld.sh	r8,r2++
80000f70:	00 00       	add	r0,r0
80000f72:	05 a8       	ld.ub	r8,r2[0x2]
80000f74:	80 00       	ld.sh	r0,r0[0x0]
80000f76:	01 24       	ld.uh	r4,r0++

80000f78 <calloc>:
80000f78:	d4 01       	pushm	lr
80000f7a:	48 48       	lddpc	r8,80000f88 <calloc+0x10>
80000f7c:	16 9a       	mov	r10,r11
80000f7e:	18 9b       	mov	r11,r12
80000f80:	70 0c       	ld.w	r12,r8[0x0]
80000f82:	f0 1f 00 03 	mcall	80000f8c <calloc+0x14>
80000f86:	d8 02       	popm	pc
80000f88:	00 00       	add	r0,r0
80000f8a:	01 00       	ld.w	r0,r0++
80000f8c:	80 00       	ld.sh	r0,r0[0x0]
80000f8e:	0f 90       	ld.ub	r0,r7[0x1]

80000f90 <_calloc_r>:
80000f90:	d4 21       	pushm	r4-r7,lr
80000f92:	f4 0b 02 4b 	mul	r11,r10,r11
80000f96:	f0 1f 00 15 	mcall	80000fe8 <_calloc_r+0x58>
80000f9a:	18 97       	mov	r7,r12
80000f9c:	c2 30       	breq	80000fe2 <_calloc_r+0x52>
80000f9e:	f8 fa ff fc 	ld.w	r10,r12[-4]
80000fa2:	e0 1a ff fc 	andl	r10,0xfffc
80000fa6:	20 4a       	sub	r10,4
80000fa8:	e0 4a 00 24 	cp.w	r10,36
80000fac:	e0 8b 00 18 	brhi	80000fdc <_calloc_r+0x4c>
80000fb0:	18 98       	mov	r8,r12
80000fb2:	59 3a       	cp.w	r10,19
80000fb4:	e0 88 00 0f 	brls	80000fd2 <_calloc_r+0x42>
80000fb8:	30 09       	mov	r9,0
80000fba:	10 a9       	st.w	r8++,r9
80000fbc:	10 a9       	st.w	r8++,r9
80000fbe:	59 ba       	cp.w	r10,27
80000fc0:	e0 88 00 09 	brls	80000fd2 <_calloc_r+0x42>
80000fc4:	10 a9       	st.w	r8++,r9
80000fc6:	10 a9       	st.w	r8++,r9
80000fc8:	e0 4a 00 24 	cp.w	r10,36
80000fcc:	c0 31       	brne	80000fd2 <_calloc_r+0x42>
80000fce:	10 a9       	st.w	r8++,r9
80000fd0:	10 a9       	st.w	r8++,r9
80000fd2:	30 09       	mov	r9,0
80000fd4:	10 a9       	st.w	r8++,r9
80000fd6:	91 19       	st.w	r8[0x4],r9
80000fd8:	91 09       	st.w	r8[0x0],r9
80000fda:	c0 48       	rjmp	80000fe2 <_calloc_r+0x52>
80000fdc:	30 0b       	mov	r11,0
80000fde:	f0 1f 00 04 	mcall	80000fec <_calloc_r+0x5c>
80000fe2:	0e 9c       	mov	r12,r7
80000fe4:	d8 22       	popm	r4-r7,pc
80000fe6:	00 00       	add	r0,r0
80000fe8:	80 00       	ld.sh	r0,r0[0x0]
80000fea:	10 20       	rsub	r0,r8
80000fec:	80 00       	ld.sh	r0,r0[0x0]
80000fee:	14 70       	tst	r0,r10

80000ff0 <free>:
80000ff0:	d4 01       	pushm	lr
80000ff2:	48 48       	lddpc	r8,80001000 <free+0x10>
80000ff4:	18 9b       	mov	r11,r12
80000ff6:	70 0c       	ld.w	r12,r8[0x0]
80000ff8:	f0 1f 00 03 	mcall	80001004 <free+0x14>
80000ffc:	d8 02       	popm	pc
80000ffe:	00 00       	add	r0,r0
80001000:	00 00       	add	r0,r0
80001002:	01 00       	ld.w	r0,r0++
80001004:	80 00       	ld.sh	r0,r0[0x0]
80001006:	15 a0       	ld.ub	r0,r10[0x2]

80001008 <malloc>:
80001008:	d4 01       	pushm	lr
8000100a:	48 48       	lddpc	r8,80001018 <malloc+0x10>
8000100c:	18 9b       	mov	r11,r12
8000100e:	70 0c       	ld.w	r12,r8[0x0]
80001010:	f0 1f 00 03 	mcall	8000101c <malloc+0x14>
80001014:	d8 02       	popm	pc
80001016:	00 00       	add	r0,r0
80001018:	00 00       	add	r0,r0
8000101a:	01 00       	ld.w	r0,r0++
8000101c:	80 00       	ld.sh	r0,r0[0x0]
8000101e:	10 20       	rsub	r0,r8

80001020 <_malloc_r>:
80001020:	d4 31       	pushm	r0-r7,lr
80001022:	f6 c8 ff f5 	sub	r8,r11,-11
80001026:	18 95       	mov	r5,r12
80001028:	10 97       	mov	r7,r8
8000102a:	e0 17 ff f8 	andl	r7,0xfff8
8000102e:	59 68       	cp.w	r8,22
80001030:	f9 b7 08 10 	movls	r7,16
80001034:	16 37       	cp.w	r7,r11
80001036:	5f 38       	srlo	r8
80001038:	f1 e7 13 f8 	or	r8,r8,r7>>0x1f
8000103c:	c0 50       	breq	80001046 <_malloc_r+0x26>
8000103e:	30 c8       	mov	r8,12
80001040:	99 38       	st.w	r12[0xc],r8
80001042:	e0 8f 01 f3 	bral	80001428 <_malloc_r+0x408>
80001046:	f0 1f 00 50 	mcall	80001184 <_malloc_r+0x164>
8000104a:	e0 47 01 f7 	cp.w	r7,503
8000104e:	e0 8b 00 1c 	brhi	80001086 <_malloc_r+0x66>
80001052:	ee 03 16 03 	lsr	r3,r7,0x3
80001056:	4c d8       	lddpc	r8,80001188 <_malloc_r+0x168>
80001058:	f0 03 00 38 	add	r8,r8,r3<<0x3
8000105c:	70 36       	ld.w	r6,r8[0xc]
8000105e:	10 36       	cp.w	r6,r8
80001060:	c0 61       	brne	8000106c <_malloc_r+0x4c>
80001062:	ec c8 ff f8 	sub	r8,r6,-8
80001066:	70 36       	ld.w	r6,r8[0xc]
80001068:	10 36       	cp.w	r6,r8
8000106a:	c0 c0       	breq	80001082 <_malloc_r+0x62>
8000106c:	6c 18       	ld.w	r8,r6[0x4]
8000106e:	e0 18 ff fc 	andl	r8,0xfffc
80001072:	6c 3a       	ld.w	r10,r6[0xc]
80001074:	ec 08 00 09 	add	r9,r6,r8
80001078:	0a 9c       	mov	r12,r5
8000107a:	6c 28       	ld.w	r8,r6[0x8]
8000107c:	95 28       	st.w	r10[0x8],r8
8000107e:	91 3a       	st.w	r8[0xc],r10
80001080:	c4 68       	rjmp	8000110c <_malloc_r+0xec>
80001082:	2f e3       	sub	r3,-2
80001084:	c4 c8       	rjmp	8000111c <_malloc_r+0xfc>
80001086:	ee 03 16 09 	lsr	r3,r7,0x9
8000108a:	c0 41       	brne	80001092 <_malloc_r+0x72>
8000108c:	ee 03 16 03 	lsr	r3,r7,0x3
80001090:	c2 68       	rjmp	800010dc <_malloc_r+0xbc>
80001092:	58 43       	cp.w	r3,4
80001094:	e0 8b 00 06 	brhi	800010a0 <_malloc_r+0x80>
80001098:	ee 03 16 06 	lsr	r3,r7,0x6
8000109c:	2c 83       	sub	r3,-56
8000109e:	c1 f8       	rjmp	800010dc <_malloc_r+0xbc>
800010a0:	59 43       	cp.w	r3,20
800010a2:	e0 8b 00 04 	brhi	800010aa <_malloc_r+0x8a>
800010a6:	2a 53       	sub	r3,-91
800010a8:	c1 a8       	rjmp	800010dc <_malloc_r+0xbc>
800010aa:	e0 43 00 54 	cp.w	r3,84
800010ae:	e0 8b 00 06 	brhi	800010ba <_malloc_r+0x9a>
800010b2:	ee 03 16 0c 	lsr	r3,r7,0xc
800010b6:	29 23       	sub	r3,-110
800010b8:	c1 28       	rjmp	800010dc <_malloc_r+0xbc>
800010ba:	e0 43 01 54 	cp.w	r3,340
800010be:	e0 8b 00 06 	brhi	800010ca <_malloc_r+0xaa>
800010c2:	ee 03 16 0f 	lsr	r3,r7,0xf
800010c6:	28 93       	sub	r3,-119
800010c8:	c0 a8       	rjmp	800010dc <_malloc_r+0xbc>
800010ca:	e0 43 05 54 	cp.w	r3,1364
800010ce:	e0 88 00 04 	brls	800010d6 <_malloc_r+0xb6>
800010d2:	37 e3       	mov	r3,126
800010d4:	c0 48       	rjmp	800010dc <_malloc_r+0xbc>
800010d6:	ee 03 16 12 	lsr	r3,r7,0x12
800010da:	28 43       	sub	r3,-124
800010dc:	4a ba       	lddpc	r10,80001188 <_malloc_r+0x168>
800010de:	f4 03 00 3a 	add	r10,r10,r3<<0x3
800010e2:	74 36       	ld.w	r6,r10[0xc]
800010e4:	c1 98       	rjmp	80001116 <_malloc_r+0xf6>
800010e6:	6c 19       	ld.w	r9,r6[0x4]
800010e8:	e0 19 ff fc 	andl	r9,0xfffc
800010ec:	f2 07 01 0b 	sub	r11,r9,r7
800010f0:	58 fb       	cp.w	r11,15
800010f2:	e0 8a 00 04 	brle	800010fa <_malloc_r+0xda>
800010f6:	20 13       	sub	r3,1
800010f8:	c1 18       	rjmp	8000111a <_malloc_r+0xfa>
800010fa:	6c 38       	ld.w	r8,r6[0xc]
800010fc:	58 0b       	cp.w	r11,0
800010fe:	c0 b5       	brlt	80001114 <_malloc_r+0xf4>
80001100:	6c 2a       	ld.w	r10,r6[0x8]
80001102:	ec 09 00 09 	add	r9,r6,r9
80001106:	0a 9c       	mov	r12,r5
80001108:	91 2a       	st.w	r8[0x8],r10
8000110a:	95 38       	st.w	r10[0xc],r8
8000110c:	72 18       	ld.w	r8,r9[0x4]
8000110e:	a1 a8       	sbr	r8,0x0
80001110:	93 18       	st.w	r9[0x4],r8
80001112:	cb c8       	rjmp	8000128a <_malloc_r+0x26a>
80001114:	10 96       	mov	r6,r8
80001116:	14 36       	cp.w	r6,r10
80001118:	ce 71       	brne	800010e6 <_malloc_r+0xc6>
8000111a:	2f f3       	sub	r3,-1
8000111c:	49 ba       	lddpc	r10,80001188 <_malloc_r+0x168>
8000111e:	f4 cc ff f8 	sub	r12,r10,-8
80001122:	78 26       	ld.w	r6,r12[0x8]
80001124:	18 36       	cp.w	r6,r12
80001126:	c6 e0       	breq	80001202 <_malloc_r+0x1e2>
80001128:	6c 19       	ld.w	r9,r6[0x4]
8000112a:	e0 19 ff fc 	andl	r9,0xfffc
8000112e:	f2 07 01 08 	sub	r8,r9,r7
80001132:	58 f8       	cp.w	r8,15
80001134:	e0 89 00 90 	brgt	80001254 <_malloc_r+0x234>
80001138:	99 3c       	st.w	r12[0xc],r12
8000113a:	99 2c       	st.w	r12[0x8],r12
8000113c:	58 08       	cp.w	r8,0
8000113e:	c0 55       	brlt	80001148 <_malloc_r+0x128>
80001140:	ec 09 00 09 	add	r9,r6,r9
80001144:	0a 9c       	mov	r12,r5
80001146:	ce 3b       	rjmp	8000110c <_malloc_r+0xec>
80001148:	e0 49 01 ff 	cp.w	r9,511
8000114c:	e0 8b 00 13 	brhi	80001172 <_malloc_r+0x152>
80001150:	a3 99       	lsr	r9,0x3
80001152:	f4 09 00 38 	add	r8,r10,r9<<0x3
80001156:	70 2b       	ld.w	r11,r8[0x8]
80001158:	8d 38       	st.w	r6[0xc],r8
8000115a:	8d 2b       	st.w	r6[0x8],r11
8000115c:	97 36       	st.w	r11[0xc],r6
8000115e:	91 26       	st.w	r8[0x8],r6
80001160:	a3 49       	asr	r9,0x2
80001162:	74 18       	ld.w	r8,r10[0x4]
80001164:	30 1b       	mov	r11,1
80001166:	f6 09 09 49 	lsl	r9,r11,r9
8000116a:	f1 e9 10 09 	or	r9,r8,r9
8000116e:	95 19       	st.w	r10[0x4],r9
80001170:	c4 98       	rjmp	80001202 <_malloc_r+0x1e2>
80001172:	f2 0a 16 09 	lsr	r10,r9,0x9
80001176:	58 4a       	cp.w	r10,4
80001178:	e0 8b 00 0a 	brhi	8000118c <_malloc_r+0x16c>
8000117c:	f2 0a 16 06 	lsr	r10,r9,0x6
80001180:	2c 8a       	sub	r10,-56
80001182:	c2 38       	rjmp	800011c8 <_malloc_r+0x1a8>
80001184:	80 00       	ld.sh	r0,r0[0x0]
80001186:	14 7e       	tst	lr,r10
80001188:	00 00       	add	r0,r0
8000118a:	01 04       	ld.w	r4,r0++
8000118c:	59 4a       	cp.w	r10,20
8000118e:	e0 8b 00 04 	brhi	80001196 <_malloc_r+0x176>
80001192:	2a 5a       	sub	r10,-91
80001194:	c1 a8       	rjmp	800011c8 <_malloc_r+0x1a8>
80001196:	e0 4a 00 54 	cp.w	r10,84
8000119a:	e0 8b 00 06 	brhi	800011a6 <_malloc_r+0x186>
8000119e:	f2 0a 16 0c 	lsr	r10,r9,0xc
800011a2:	29 2a       	sub	r10,-110
800011a4:	c1 28       	rjmp	800011c8 <_malloc_r+0x1a8>
800011a6:	e0 4a 01 54 	cp.w	r10,340
800011aa:	e0 8b 00 06 	brhi	800011b6 <_malloc_r+0x196>
800011ae:	f2 0a 16 0f 	lsr	r10,r9,0xf
800011b2:	28 9a       	sub	r10,-119
800011b4:	c0 a8       	rjmp	800011c8 <_malloc_r+0x1a8>
800011b6:	e0 4a 05 54 	cp.w	r10,1364
800011ba:	e0 88 00 04 	brls	800011c2 <_malloc_r+0x1a2>
800011be:	37 ea       	mov	r10,126
800011c0:	c0 48       	rjmp	800011c8 <_malloc_r+0x1a8>
800011c2:	f2 0a 16 12 	lsr	r10,r9,0x12
800011c6:	28 4a       	sub	r10,-124
800011c8:	4c 8b       	lddpc	r11,800012e8 <_malloc_r+0x2c8>
800011ca:	f6 0a 00 34 	add	r4,r11,r10<<0x3
800011ce:	68 28       	ld.w	r8,r4[0x8]
800011d0:	08 38       	cp.w	r8,r4
800011d2:	c0 e1       	brne	800011ee <_malloc_r+0x1ce>
800011d4:	76 19       	ld.w	r9,r11[0x4]
800011d6:	a3 4a       	asr	r10,0x2
800011d8:	30 1e       	mov	lr,1
800011da:	fc 0a 09 4a 	lsl	r10,lr,r10
800011de:	f3 ea 10 0a 	or	r10,r9,r10
800011e2:	10 99       	mov	r9,r8
800011e4:	97 1a       	st.w	r11[0x4],r10
800011e6:	c0 a8       	rjmp	800011fa <_malloc_r+0x1da>
800011e8:	70 28       	ld.w	r8,r8[0x8]
800011ea:	08 38       	cp.w	r8,r4
800011ec:	c0 60       	breq	800011f8 <_malloc_r+0x1d8>
800011ee:	70 1a       	ld.w	r10,r8[0x4]
800011f0:	e0 1a ff fc 	andl	r10,0xfffc
800011f4:	14 39       	cp.w	r9,r10
800011f6:	cf 93       	brcs	800011e8 <_malloc_r+0x1c8>
800011f8:	70 39       	ld.w	r9,r8[0xc]
800011fa:	8d 39       	st.w	r6[0xc],r9
800011fc:	8d 28       	st.w	r6[0x8],r8
800011fe:	91 36       	st.w	r8[0xc],r6
80001200:	93 26       	st.w	r9[0x8],r6
80001202:	e6 08 14 02 	asr	r8,r3,0x2
80001206:	30 1b       	mov	r11,1
80001208:	4b 84       	lddpc	r4,800012e8 <_malloc_r+0x2c8>
8000120a:	f6 08 09 4b 	lsl	r11,r11,r8
8000120e:	68 18       	ld.w	r8,r4[0x4]
80001210:	10 3b       	cp.w	r11,r8
80001212:	e0 8b 00 6f 	brhi	800012f0 <_malloc_r+0x2d0>
80001216:	f7 e8 00 09 	and	r9,r11,r8
8000121a:	c0 b1       	brne	80001230 <_malloc_r+0x210>
8000121c:	e0 13 ff fc 	andl	r3,0xfffc
80001220:	a1 7b       	lsl	r11,0x1
80001222:	2f c3       	sub	r3,-4
80001224:	c0 38       	rjmp	8000122a <_malloc_r+0x20a>
80001226:	2f c3       	sub	r3,-4
80001228:	a1 7b       	lsl	r11,0x1
8000122a:	f7 e8 00 09 	and	r9,r11,r8
8000122e:	cf c0       	breq	80001226 <_malloc_r+0x206>
80001230:	e8 03 00 3e 	add	lr,r4,r3<<0x3
80001234:	06 92       	mov	r2,r3
80001236:	1c 91       	mov	r1,lr
80001238:	62 36       	ld.w	r6,r1[0xc]
8000123a:	c2 e8       	rjmp	80001296 <_malloc_r+0x276>
8000123c:	6c 1a       	ld.w	r10,r6[0x4]
8000123e:	e0 1a ff fc 	andl	r10,0xfffc
80001242:	f4 07 01 08 	sub	r8,r10,r7
80001246:	58 f8       	cp.w	r8,15
80001248:	e0 8a 00 15 	brle	80001272 <_malloc_r+0x252>
8000124c:	6c 3a       	ld.w	r10,r6[0xc]
8000124e:	6c 29       	ld.w	r9,r6[0x8]
80001250:	95 29       	st.w	r10[0x8],r9
80001252:	93 3a       	st.w	r9[0xc],r10
80001254:	0e 99       	mov	r9,r7
80001256:	ec 07 00 07 	add	r7,r6,r7
8000125a:	a1 a9       	sbr	r9,0x0
8000125c:	99 37       	st.w	r12[0xc],r7
8000125e:	99 27       	st.w	r12[0x8],r7
80001260:	8d 19       	st.w	r6[0x4],r9
80001262:	ee 08 09 08 	st.w	r7[r8],r8
80001266:	8f 2c       	st.w	r7[0x8],r12
80001268:	8f 3c       	st.w	r7[0xc],r12
8000126a:	a1 a8       	sbr	r8,0x0
8000126c:	0a 9c       	mov	r12,r5
8000126e:	8f 18       	st.w	r7[0x4],r8
80001270:	c0 d8       	rjmp	8000128a <_malloc_r+0x26a>
80001272:	6c 39       	ld.w	r9,r6[0xc]
80001274:	58 08       	cp.w	r8,0
80001276:	c0 f5       	brlt	80001294 <_malloc_r+0x274>
80001278:	ec 0a 00 0a 	add	r10,r6,r10
8000127c:	74 18       	ld.w	r8,r10[0x4]
8000127e:	a1 a8       	sbr	r8,0x0
80001280:	0a 9c       	mov	r12,r5
80001282:	95 18       	st.w	r10[0x4],r8
80001284:	6c 28       	ld.w	r8,r6[0x8]
80001286:	93 28       	st.w	r9[0x8],r8
80001288:	91 39       	st.w	r8[0xc],r9
8000128a:	f0 1f 00 19 	mcall	800012ec <_malloc_r+0x2cc>
8000128e:	ec cc ff f8 	sub	r12,r6,-8
80001292:	d8 32       	popm	r0-r7,pc
80001294:	12 96       	mov	r6,r9
80001296:	02 36       	cp.w	r6,r1
80001298:	cd 21       	brne	8000123c <_malloc_r+0x21c>
8000129a:	2f f2       	sub	r2,-1
8000129c:	f1 d2 c0 02 	bfextu	r8,r2,0x0,0x2
800012a0:	c0 30       	breq	800012a6 <_malloc_r+0x286>
800012a2:	2f 81       	sub	r1,-8
800012a4:	cc ab       	rjmp	80001238 <_malloc_r+0x218>
800012a6:	1c 98       	mov	r8,lr
800012a8:	f3 d3 c0 02 	bfextu	r9,r3,0x0,0x2
800012ac:	c0 81       	brne	800012bc <_malloc_r+0x29c>
800012ae:	68 19       	ld.w	r9,r4[0x4]
800012b0:	f6 08 11 ff 	rsub	r8,r11,-1
800012b4:	f3 e8 00 08 	and	r8,r9,r8
800012b8:	89 18       	st.w	r4[0x4],r8
800012ba:	c0 78       	rjmp	800012c8 <_malloc_r+0x2a8>
800012bc:	f0 c9 00 08 	sub	r9,r8,8
800012c0:	20 13       	sub	r3,1
800012c2:	70 08       	ld.w	r8,r8[0x0]
800012c4:	12 38       	cp.w	r8,r9
800012c6:	cf 10       	breq	800012a8 <_malloc_r+0x288>
800012c8:	a1 7b       	lsl	r11,0x1
800012ca:	68 18       	ld.w	r8,r4[0x4]
800012cc:	10 3b       	cp.w	r11,r8
800012ce:	e0 8b 00 11 	brhi	800012f0 <_malloc_r+0x2d0>
800012d2:	58 0b       	cp.w	r11,0
800012d4:	c0 e0       	breq	800012f0 <_malloc_r+0x2d0>
800012d6:	04 93       	mov	r3,r2
800012d8:	c0 38       	rjmp	800012de <_malloc_r+0x2be>
800012da:	2f c3       	sub	r3,-4
800012dc:	a1 7b       	lsl	r11,0x1
800012de:	f7 e8 00 09 	and	r9,r11,r8
800012e2:	ca 71       	brne	80001230 <_malloc_r+0x210>
800012e4:	cf bb       	rjmp	800012da <_malloc_r+0x2ba>
800012e6:	00 00       	add	r0,r0
800012e8:	00 00       	add	r0,r0
800012ea:	01 04       	ld.w	r4,r0++
800012ec:	80 00       	ld.sh	r0,r0[0x0]
800012ee:	14 80       	andn	r0,r10
800012f0:	68 23       	ld.w	r3,r4[0x8]
800012f2:	66 12       	ld.w	r2,r3[0x4]
800012f4:	e0 12 ff fc 	andl	r2,0xfffc
800012f8:	0e 32       	cp.w	r2,r7
800012fa:	5f 39       	srlo	r9
800012fc:	e4 07 01 08 	sub	r8,r2,r7
80001300:	58 f8       	cp.w	r8,15
80001302:	5f aa       	srle	r10
80001304:	f5 e9 10 09 	or	r9,r10,r9
80001308:	e0 80 00 a2 	breq	8000144c <_malloc_r+0x42c>
8000130c:	4c 88       	lddpc	r8,8000142c <_malloc_r+0x40c>
8000130e:	70 01       	ld.w	r1,r8[0x0]
80001310:	4c 88       	lddpc	r8,80001430 <_malloc_r+0x410>
80001312:	2f 01       	sub	r1,-16
80001314:	70 08       	ld.w	r8,r8[0x0]
80001316:	0e 01       	add	r1,r7
80001318:	5b f8       	cp.w	r8,-1
8000131a:	c0 40       	breq	80001322 <_malloc_r+0x302>
8000131c:	28 11       	sub	r1,-127
8000131e:	e0 11 ff 80 	andl	r1,0xff80
80001322:	02 9b       	mov	r11,r1
80001324:	0a 9c       	mov	r12,r5
80001326:	f0 1f 00 44 	mcall	80001434 <_malloc_r+0x414>
8000132a:	18 96       	mov	r6,r12
8000132c:	5b fc       	cp.w	r12,-1
8000132e:	c6 e0       	breq	8000140a <_malloc_r+0x3ea>
80001330:	e6 02 00 08 	add	r8,r3,r2
80001334:	10 3c       	cp.w	r12,r8
80001336:	c0 32       	brcc	8000133c <_malloc_r+0x31c>
80001338:	08 33       	cp.w	r3,r4
8000133a:	c6 81       	brne	8000140a <_malloc_r+0x3ea>
8000133c:	4b fa       	lddpc	r10,80001438 <_malloc_r+0x418>
8000133e:	74 09       	ld.w	r9,r10[0x0]
80001340:	e2 09 00 09 	add	r9,r1,r9
80001344:	95 09       	st.w	r10[0x0],r9
80001346:	10 36       	cp.w	r6,r8
80001348:	c0 a1       	brne	8000135c <_malloc_r+0x33c>
8000134a:	f5 d6 c0 07 	bfextu	r10,r6,0x0,0x7
8000134e:	c0 71       	brne	8000135c <_malloc_r+0x33c>
80001350:	e2 02 00 02 	add	r2,r1,r2
80001354:	68 28       	ld.w	r8,r4[0x8]
80001356:	a1 a2       	sbr	r2,0x0
80001358:	91 12       	st.w	r8[0x4],r2
8000135a:	c4 c8       	rjmp	800013f2 <_malloc_r+0x3d2>
8000135c:	4b 5a       	lddpc	r10,80001430 <_malloc_r+0x410>
8000135e:	74 0b       	ld.w	r11,r10[0x0]
80001360:	5b fb       	cp.w	r11,-1
80001362:	c0 31       	brne	80001368 <_malloc_r+0x348>
80001364:	95 06       	st.w	r10[0x0],r6
80001366:	c0 68       	rjmp	80001372 <_malloc_r+0x352>
80001368:	ec 09 00 09 	add	r9,r6,r9
8000136c:	4b 3a       	lddpc	r10,80001438 <_malloc_r+0x418>
8000136e:	10 19       	sub	r9,r8
80001370:	95 09       	st.w	r10[0x0],r9
80001372:	f1 d6 c0 03 	bfextu	r8,r6,0x0,0x3
80001376:	f0 09 11 08 	rsub	r9,r8,8
8000137a:	58 08       	cp.w	r8,0
8000137c:	f2 08 17 10 	movne	r8,r9
80001380:	ed d8 e1 06 	addne	r6,r6,r8
80001384:	28 08       	sub	r8,-128
80001386:	ec 01 00 01 	add	r1,r6,r1
8000138a:	0a 9c       	mov	r12,r5
8000138c:	e3 d1 c0 07 	bfextu	r1,r1,0x0,0x7
80001390:	f0 01 01 01 	sub	r1,r8,r1
80001394:	02 9b       	mov	r11,r1
80001396:	f0 1f 00 28 	mcall	80001434 <_malloc_r+0x414>
8000139a:	4a 88       	lddpc	r8,80001438 <_malloc_r+0x418>
8000139c:	5b fc       	cp.w	r12,-1
8000139e:	ec 0c 17 00 	moveq	r12,r6
800013a2:	f9 b1 00 00 	moveq	r1,0
800013a6:	70 09       	ld.w	r9,r8[0x0]
800013a8:	0c 1c       	sub	r12,r6
800013aa:	89 26       	st.w	r4[0x8],r6
800013ac:	02 0c       	add	r12,r1
800013ae:	12 01       	add	r1,r9
800013b0:	a1 ac       	sbr	r12,0x0
800013b2:	91 01       	st.w	r8[0x0],r1
800013b4:	8d 1c       	st.w	r6[0x4],r12
800013b6:	08 33       	cp.w	r3,r4
800013b8:	c1 d0       	breq	800013f2 <_malloc_r+0x3d2>
800013ba:	58 f2       	cp.w	r2,15
800013bc:	e0 8b 00 05 	brhi	800013c6 <_malloc_r+0x3a6>
800013c0:	30 18       	mov	r8,1
800013c2:	8d 18       	st.w	r6[0x4],r8
800013c4:	c2 38       	rjmp	8000140a <_malloc_r+0x3ea>
800013c6:	30 59       	mov	r9,5
800013c8:	20 c2       	sub	r2,12
800013ca:	e0 12 ff f8 	andl	r2,0xfff8
800013ce:	e6 02 00 08 	add	r8,r3,r2
800013d2:	91 29       	st.w	r8[0x8],r9
800013d4:	91 19       	st.w	r8[0x4],r9
800013d6:	66 18       	ld.w	r8,r3[0x4]
800013d8:	f1 d8 c0 01 	bfextu	r8,r8,0x0,0x1
800013dc:	e5 e8 10 08 	or	r8,r2,r8
800013e0:	87 18       	st.w	r3[0x4],r8
800013e2:	58 f2       	cp.w	r2,15
800013e4:	e0 88 00 07 	brls	800013f2 <_malloc_r+0x3d2>
800013e8:	e6 cb ff f8 	sub	r11,r3,-8
800013ec:	0a 9c       	mov	r12,r5
800013ee:	f0 1f 00 14 	mcall	8000143c <_malloc_r+0x41c>
800013f2:	49 49       	lddpc	r9,80001440 <_malloc_r+0x420>
800013f4:	72 0a       	ld.w	r10,r9[0x0]
800013f6:	49 18       	lddpc	r8,80001438 <_malloc_r+0x418>
800013f8:	70 08       	ld.w	r8,r8[0x0]
800013fa:	14 38       	cp.w	r8,r10
800013fc:	f3 f8 ba 00 	st.whi	r9[0x0],r8
80001400:	49 19       	lddpc	r9,80001444 <_malloc_r+0x424>
80001402:	72 0a       	ld.w	r10,r9[0x0]
80001404:	14 38       	cp.w	r8,r10
80001406:	f3 f8 ba 00 	st.whi	r9[0x0],r8
8000140a:	68 28       	ld.w	r8,r4[0x8]
8000140c:	70 18       	ld.w	r8,r8[0x4]
8000140e:	e0 18 ff fc 	andl	r8,0xfffc
80001412:	0e 38       	cp.w	r8,r7
80001414:	5f 39       	srlo	r9
80001416:	0e 18       	sub	r8,r7
80001418:	58 f8       	cp.w	r8,15
8000141a:	5f aa       	srle	r10
8000141c:	f5 e9 10 09 	or	r9,r10,r9
80001420:	c1 60       	breq	8000144c <_malloc_r+0x42c>
80001422:	0a 9c       	mov	r12,r5
80001424:	f0 1f 00 09 	mcall	80001448 <_malloc_r+0x428>
80001428:	d8 3a       	popm	r0-r7,pc,r12=0
8000142a:	00 00       	add	r0,r0
8000142c:	00 00       	add	r0,r0
8000142e:	05 20       	ld.uh	r0,r2++
80001430:	00 00       	add	r0,r0
80001432:	05 10       	ld.sh	r0,r2++
80001434:	80 00       	ld.sh	r0,r0[0x0]
80001436:	14 84       	andn	r4,r10
80001438:	00 00       	add	r0,r0
8000143a:	05 24       	ld.uh	r4,r2++
8000143c:	80 00       	ld.sh	r0,r0[0x0]
8000143e:	15 a0       	ld.ub	r0,r10[0x2]
80001440:	00 00       	add	r0,r0
80001442:	05 1c       	ld.sh	r12,r2++
80001444:	00 00       	add	r0,r0
80001446:	05 18       	ld.sh	r8,r2++
80001448:	80 00       	ld.sh	r0,r0[0x0]
8000144a:	14 80       	andn	r0,r10
8000144c:	68 26       	ld.w	r6,r4[0x8]
8000144e:	a1 a8       	sbr	r8,0x0
80001450:	0e 99       	mov	r9,r7
80001452:	a1 a9       	sbr	r9,0x0
80001454:	8d 19       	st.w	r6[0x4],r9
80001456:	ec 07 00 07 	add	r7,r6,r7
8000145a:	0a 9c       	mov	r12,r5
8000145c:	89 27       	st.w	r4[0x8],r7
8000145e:	8f 18       	st.w	r7[0x4],r8
80001460:	f0 1f 00 03 	mcall	8000146c <_malloc_r+0x44c>
80001464:	ec cc ff f8 	sub	r12,r6,-8
80001468:	d8 32       	popm	r0-r7,pc
8000146a:	00 00       	add	r0,r0
8000146c:	80 00       	ld.sh	r0,r0[0x0]
8000146e:	14 80       	andn	r0,r10

80001470 <memset>:
80001470:	18 98       	mov	r8,r12
80001472:	c0 38       	rjmp	80001478 <memset+0x8>
80001474:	10 cb       	st.b	r8++,r11
80001476:	20 1a       	sub	r10,1
80001478:	58 0a       	cp.w	r10,0
8000147a:	cf d1       	brne	80001474 <memset+0x4>
8000147c:	5e fc       	retal	r12

8000147e <__malloc_lock>:
8000147e:	5e fc       	retal	r12

80001480 <__malloc_unlock>:
80001480:	5e fc       	retal	r12
80001482:	d7 03       	nop

80001484 <_sbrk_r>:
80001484:	d4 21       	pushm	r4-r7,lr
80001486:	30 08       	mov	r8,0
80001488:	18 97       	mov	r7,r12
8000148a:	48 76       	lddpc	r6,800014a4 <_sbrk_r+0x20>
8000148c:	16 9c       	mov	r12,r11
8000148e:	8d 08       	st.w	r6[0x0],r8
80001490:	f0 1f 00 06 	mcall	800014a8 <_sbrk_r+0x24>
80001494:	5b fc       	cp.w	r12,-1
80001496:	c0 51       	brne	800014a0 <_sbrk_r+0x1c>
80001498:	6c 08       	ld.w	r8,r6[0x0]
8000149a:	58 08       	cp.w	r8,0
8000149c:	ef f8 1a 03 	st.wne	r7[0xc],r8
800014a0:	d8 22       	popm	r4-r7,pc
800014a2:	00 00       	add	r0,r0
800014a4:	00 00       	add	r0,r0
800014a6:	05 a0       	ld.ub	r0,r2[0x2]
800014a8:	80 00       	ld.sh	r0,r0[0x0]
800014aa:	14 ac       	st.w	r10++,r12

800014ac <_sbrk>:
800014ac:	d4 01       	pushm	lr
800014ae:	48 c8       	lddpc	r8,800014dc <_sbrk+0x30>
800014b0:	70 09       	ld.w	r9,r8[0x0]
800014b2:	58 09       	cp.w	r9,0
800014b4:	c0 31       	brne	800014ba <_sbrk+0xe>
800014b6:	48 b9       	lddpc	r9,800014e0 <_sbrk+0x34>
800014b8:	91 09       	st.w	r8[0x0],r9
800014ba:	48 99       	lddpc	r9,800014dc <_sbrk+0x30>
800014bc:	48 aa       	lddpc	r10,800014e4 <_sbrk+0x38>
800014be:	72 08       	ld.w	r8,r9[0x0]
800014c0:	f0 0c 00 0c 	add	r12,r8,r12
800014c4:	14 3c       	cp.w	r12,r10
800014c6:	e0 8b 00 04 	brhi	800014ce <_sbrk+0x22>
800014ca:	93 0c       	st.w	r9[0x0],r12
800014cc:	c0 68       	rjmp	800014d8 <_sbrk+0x2c>
800014ce:	f0 1f 00 07 	mcall	800014e8 <_sbrk+0x3c>
800014d2:	30 c8       	mov	r8,12
800014d4:	99 08       	st.w	r12[0x0],r8
800014d6:	3f f8       	mov	r8,-1
800014d8:	10 9c       	mov	r12,r8
800014da:	d8 02       	popm	pc
800014dc:	00 00       	add	r0,r0
800014de:	05 4c       	ld.w	r12,--r2
800014e0:	00 00       	add	r0,r0
800014e2:	05 a8       	ld.ub	r8,r2[0x2]
800014e4:	00 00       	add	r0,r0
800014e6:	e0 00       	*unknown*
800014e8:	80 00       	ld.sh	r0,r0[0x0]
800014ea:	14 ec       	st.h	--r10,r12

800014ec <__errno>:
800014ec:	48 28       	lddpc	r8,800014f4 <__errno+0x8>
800014ee:	70 0c       	ld.w	r12,r8[0x0]
800014f0:	2f 4c       	sub	r12,-12
800014f2:	5e fc       	retal	r12
800014f4:	00 00       	add	r0,r0
800014f6:	01 00       	ld.w	r0,r0++

800014f8 <_malloc_trim_r>:
800014f8:	d4 21       	pushm	r4-r7,lr
800014fa:	16 95       	mov	r5,r11
800014fc:	18 97       	mov	r7,r12
800014fe:	f0 1f 00 23 	mcall	80001588 <_malloc_trim_r+0x90>
80001502:	4a 34       	lddpc	r4,8000158c <_malloc_trim_r+0x94>
80001504:	68 28       	ld.w	r8,r4[0x8]
80001506:	70 16       	ld.w	r6,r8[0x4]
80001508:	e0 16 ff fc 	andl	r6,0xfffc
8000150c:	ec c8 ff 91 	sub	r8,r6,-111
80001510:	f0 05 01 05 	sub	r5,r8,r5
80001514:	e0 15 ff 80 	andl	r5,0xff80
80001518:	ea c5 00 80 	sub	r5,r5,128
8000151c:	e0 45 00 7f 	cp.w	r5,127
80001520:	e0 8a 00 23 	brle	80001566 <_malloc_trim_r+0x6e>
80001524:	30 0b       	mov	r11,0
80001526:	0e 9c       	mov	r12,r7
80001528:	f0 1f 00 1a 	mcall	80001590 <_malloc_trim_r+0x98>
8000152c:	68 28       	ld.w	r8,r4[0x8]
8000152e:	0c 08       	add	r8,r6
80001530:	10 3c       	cp.w	r12,r8
80001532:	c1 a1       	brne	80001566 <_malloc_trim_r+0x6e>
80001534:	ea 0b 11 00 	rsub	r11,r5,0
80001538:	0e 9c       	mov	r12,r7
8000153a:	f0 1f 00 16 	mcall	80001590 <_malloc_trim_r+0x98>
8000153e:	5b fc       	cp.w	r12,-1
80001540:	c1 71       	brne	8000156e <_malloc_trim_r+0x76>
80001542:	30 0b       	mov	r11,0
80001544:	0e 9c       	mov	r12,r7
80001546:	f0 1f 00 13 	mcall	80001590 <_malloc_trim_r+0x98>
8000154a:	68 28       	ld.w	r8,r4[0x8]
8000154c:	f8 08 01 09 	sub	r9,r12,r8
80001550:	58 f9       	cp.w	r9,15
80001552:	e0 8a 00 0a 	brle	80001566 <_malloc_trim_r+0x6e>
80001556:	a1 a9       	sbr	r9,0x0
80001558:	91 19       	st.w	r8[0x4],r9
8000155a:	48 f8       	lddpc	r8,80001594 <_malloc_trim_r+0x9c>
8000155c:	70 09       	ld.w	r9,r8[0x0]
8000155e:	48 f8       	lddpc	r8,80001598 <_malloc_trim_r+0xa0>
80001560:	f8 09 01 09 	sub	r9,r12,r9
80001564:	91 09       	st.w	r8[0x0],r9
80001566:	0e 9c       	mov	r12,r7
80001568:	f0 1f 00 0d 	mcall	8000159c <_malloc_trim_r+0xa4>
8000156c:	d8 2a       	popm	r4-r7,pc,r12=0
8000156e:	68 28       	ld.w	r8,r4[0x8]
80001570:	0a 16       	sub	r6,r5
80001572:	a1 a6       	sbr	r6,0x0
80001574:	91 16       	st.w	r8[0x4],r6
80001576:	48 98       	lddpc	r8,80001598 <_malloc_trim_r+0xa0>
80001578:	70 09       	ld.w	r9,r8[0x0]
8000157a:	0a 19       	sub	r9,r5
8000157c:	0e 9c       	mov	r12,r7
8000157e:	91 09       	st.w	r8[0x0],r9
80001580:	f0 1f 00 07 	mcall	8000159c <_malloc_trim_r+0xa4>
80001584:	da 2a       	popm	r4-r7,pc,r12=1
80001586:	00 00       	add	r0,r0
80001588:	80 00       	ld.sh	r0,r0[0x0]
8000158a:	14 7e       	tst	lr,r10
8000158c:	00 00       	add	r0,r0
8000158e:	01 04       	ld.w	r4,r0++
80001590:	80 00       	ld.sh	r0,r0[0x0]
80001592:	14 84       	andn	r4,r10
80001594:	00 00       	add	r0,r0
80001596:	05 10       	ld.sh	r0,r2++
80001598:	00 00       	add	r0,r0
8000159a:	05 24       	ld.uh	r4,r2++
8000159c:	80 00       	ld.sh	r0,r0[0x0]
8000159e:	14 80       	andn	r0,r10

800015a0 <_free_r>:
800015a0:	d4 21       	pushm	r4-r7,lr
800015a2:	16 96       	mov	r6,r11
800015a4:	18 97       	mov	r7,r12
800015a6:	58 0b       	cp.w	r11,0
800015a8:	e0 80 00 c8 	breq	80001738 <_free_r+0x198>
800015ac:	f0 1f 00 4c 	mcall	800016dc <_free_r+0x13c>
800015b0:	20 86       	sub	r6,8
800015b2:	4c ca       	lddpc	r10,800016e0 <_free_r+0x140>
800015b4:	6c 18       	ld.w	r8,r6[0x4]
800015b6:	74 2e       	ld.w	lr,r10[0x8]
800015b8:	f9 d8 c0 01 	bfextu	r12,r8,0x0,0x1
800015bc:	a1 c8       	cbr	r8,0x0
800015be:	ec 08 00 09 	add	r9,r6,r8
800015c2:	72 1b       	ld.w	r11,r9[0x4]
800015c4:	e0 1b ff fc 	andl	r11,0xfffc
800015c8:	1c 39       	cp.w	r9,lr
800015ca:	c1 d1       	brne	80001604 <_free_r+0x64>
800015cc:	f6 08 00 08 	add	r8,r11,r8
800015d0:	58 0c       	cp.w	r12,0
800015d2:	c0 81       	brne	800015e2 <_free_r+0x42>
800015d4:	6c 09       	ld.w	r9,r6[0x0]
800015d6:	12 16       	sub	r6,r9
800015d8:	12 08       	add	r8,r9
800015da:	6c 3b       	ld.w	r11,r6[0xc]
800015dc:	6c 29       	ld.w	r9,r6[0x8]
800015de:	97 29       	st.w	r11[0x8],r9
800015e0:	93 3b       	st.w	r9[0xc],r11
800015e2:	10 99       	mov	r9,r8
800015e4:	95 26       	st.w	r10[0x8],r6
800015e6:	a1 a9       	sbr	r9,0x0
800015e8:	8d 19       	st.w	r6[0x4],r9
800015ea:	4b f9       	lddpc	r9,800016e4 <_free_r+0x144>
800015ec:	72 09       	ld.w	r9,r9[0x0]
800015ee:	12 38       	cp.w	r8,r9
800015f0:	c0 63       	brcs	800015fc <_free_r+0x5c>
800015f2:	4b e8       	lddpc	r8,800016e8 <_free_r+0x148>
800015f4:	0e 9c       	mov	r12,r7
800015f6:	70 0b       	ld.w	r11,r8[0x0]
800015f8:	f0 1f 00 3d 	mcall	800016ec <_free_r+0x14c>
800015fc:	0e 9c       	mov	r12,r7
800015fe:	f0 1f 00 3d 	mcall	800016f0 <_free_r+0x150>
80001602:	d8 22       	popm	r4-r7,pc
80001604:	93 1b       	st.w	r9[0x4],r11
80001606:	58 0c       	cp.w	r12,0
80001608:	c0 30       	breq	8000160e <_free_r+0x6e>
8000160a:	30 0c       	mov	r12,0
8000160c:	c1 08       	rjmp	8000162c <_free_r+0x8c>
8000160e:	6c 0e       	ld.w	lr,r6[0x0]
80001610:	f4 c5 ff f8 	sub	r5,r10,-8
80001614:	1c 16       	sub	r6,lr
80001616:	1c 08       	add	r8,lr
80001618:	6c 2e       	ld.w	lr,r6[0x8]
8000161a:	0a 3e       	cp.w	lr,r5
8000161c:	f9 bc 00 01 	moveq	r12,1
80001620:	ed f5 10 03 	ld.wne	r5,r6[0xc]
80001624:	eb fe 1a 02 	st.wne	r5[0x8],lr
80001628:	fd f5 1a 03 	st.wne	lr[0xc],r5
8000162c:	f2 0b 00 0e 	add	lr,r9,r11
80001630:	7c 1e       	ld.w	lr,lr[0x4]
80001632:	ed be 00 00 	bld	lr,0x0
80001636:	c1 30       	breq	8000165c <_free_r+0xbc>
80001638:	16 08       	add	r8,r11
8000163a:	58 0c       	cp.w	r12,0
8000163c:	c0 c1       	brne	80001654 <_free_r+0xb4>
8000163e:	4a 9e       	lddpc	lr,800016e0 <_free_r+0x140>
80001640:	72 2b       	ld.w	r11,r9[0x8]
80001642:	2f 8e       	sub	lr,-8
80001644:	1c 3b       	cp.w	r11,lr
80001646:	c0 71       	brne	80001654 <_free_r+0xb4>
80001648:	97 36       	st.w	r11[0xc],r6
8000164a:	97 26       	st.w	r11[0x8],r6
8000164c:	8d 2b       	st.w	r6[0x8],r11
8000164e:	8d 3b       	st.w	r6[0xc],r11
80001650:	30 1c       	mov	r12,1
80001652:	c0 58       	rjmp	8000165c <_free_r+0xbc>
80001654:	72 2b       	ld.w	r11,r9[0x8]
80001656:	72 39       	ld.w	r9,r9[0xc]
80001658:	93 2b       	st.w	r9[0x8],r11
8000165a:	97 39       	st.w	r11[0xc],r9
8000165c:	10 99       	mov	r9,r8
8000165e:	ec 08 09 08 	st.w	r6[r8],r8
80001662:	a1 a9       	sbr	r9,0x0
80001664:	8d 19       	st.w	r6[0x4],r9
80001666:	58 0c       	cp.w	r12,0
80001668:	c6 51       	brne	80001732 <_free_r+0x192>
8000166a:	e0 48 01 ff 	cp.w	r8,511
8000166e:	e0 8b 00 13 	brhi	80001694 <_free_r+0xf4>
80001672:	a3 98       	lsr	r8,0x3
80001674:	f4 08 00 39 	add	r9,r10,r8<<0x3
80001678:	72 2b       	ld.w	r11,r9[0x8]
8000167a:	8d 39       	st.w	r6[0xc],r9
8000167c:	8d 2b       	st.w	r6[0x8],r11
8000167e:	97 36       	st.w	r11[0xc],r6
80001680:	93 26       	st.w	r9[0x8],r6
80001682:	a3 48       	asr	r8,0x2
80001684:	74 19       	ld.w	r9,r10[0x4]
80001686:	30 1b       	mov	r11,1
80001688:	f6 08 09 48 	lsl	r8,r11,r8
8000168c:	f3 e8 10 08 	or	r8,r9,r8
80001690:	95 18       	st.w	r10[0x4],r8
80001692:	c5 08       	rjmp	80001732 <_free_r+0x192>
80001694:	f0 0b 16 09 	lsr	r11,r8,0x9
80001698:	58 4b       	cp.w	r11,4
8000169a:	e0 8b 00 06 	brhi	800016a6 <_free_r+0x106>
8000169e:	f0 0b 16 06 	lsr	r11,r8,0x6
800016a2:	2c 8b       	sub	r11,-56
800016a4:	c2 b8       	rjmp	800016fa <_free_r+0x15a>
800016a6:	59 4b       	cp.w	r11,20
800016a8:	e0 8b 00 04 	brhi	800016b0 <_free_r+0x110>
800016ac:	2a 5b       	sub	r11,-91
800016ae:	c2 68       	rjmp	800016fa <_free_r+0x15a>
800016b0:	e0 4b 00 54 	cp.w	r11,84
800016b4:	e0 8b 00 06 	brhi	800016c0 <_free_r+0x120>
800016b8:	f0 0b 16 0c 	lsr	r11,r8,0xc
800016bc:	29 2b       	sub	r11,-110
800016be:	c1 e8       	rjmp	800016fa <_free_r+0x15a>
800016c0:	e0 4b 01 54 	cp.w	r11,340
800016c4:	e0 8b 00 06 	brhi	800016d0 <_free_r+0x130>
800016c8:	f0 0b 16 0f 	lsr	r11,r8,0xf
800016cc:	28 9b       	sub	r11,-119
800016ce:	c1 68       	rjmp	800016fa <_free_r+0x15a>
800016d0:	e0 4b 05 54 	cp.w	r11,1364
800016d4:	e0 88 00 10 	brls	800016f4 <_free_r+0x154>
800016d8:	37 eb       	mov	r11,126
800016da:	c1 08       	rjmp	800016fa <_free_r+0x15a>
800016dc:	80 00       	ld.sh	r0,r0[0x0]
800016de:	14 7e       	tst	lr,r10
800016e0:	00 00       	add	r0,r0
800016e2:	01 04       	ld.w	r4,r0++
800016e4:	00 00       	add	r0,r0
800016e6:	05 0c       	ld.w	r12,r2++
800016e8:	00 00       	add	r0,r0
800016ea:	05 20       	ld.uh	r0,r2++
800016ec:	80 00       	ld.sh	r0,r0[0x0]
800016ee:	14 f8       	st.b	--r10,r8
800016f0:	80 00       	ld.sh	r0,r0[0x0]
800016f2:	14 80       	andn	r0,r10
800016f4:	f0 0b 16 12 	lsr	r11,r8,0x12
800016f8:	28 4b       	sub	r11,-124
800016fa:	f4 0b 00 3c 	add	r12,r10,r11<<0x3
800016fe:	78 29       	ld.w	r9,r12[0x8]
80001700:	18 39       	cp.w	r9,r12
80001702:	c0 e1       	brne	8000171e <_free_r+0x17e>
80001704:	74 18       	ld.w	r8,r10[0x4]
80001706:	a3 4b       	asr	r11,0x2
80001708:	30 1c       	mov	r12,1
8000170a:	f8 0b 09 4b 	lsl	r11,r12,r11
8000170e:	f1 eb 10 0b 	or	r11,r8,r11
80001712:	12 98       	mov	r8,r9
80001714:	95 1b       	st.w	r10[0x4],r11
80001716:	c0 a8       	rjmp	8000172a <_free_r+0x18a>
80001718:	72 29       	ld.w	r9,r9[0x8]
8000171a:	18 39       	cp.w	r9,r12
8000171c:	c0 60       	breq	80001728 <_free_r+0x188>
8000171e:	72 1a       	ld.w	r10,r9[0x4]
80001720:	e0 1a ff fc 	andl	r10,0xfffc
80001724:	14 38       	cp.w	r8,r10
80001726:	cf 93       	brcs	80001718 <_free_r+0x178>
80001728:	72 38       	ld.w	r8,r9[0xc]
8000172a:	8d 38       	st.w	r6[0xc],r8
8000172c:	8d 29       	st.w	r6[0x8],r9
8000172e:	93 36       	st.w	r9[0xc],r6
80001730:	91 26       	st.w	r8[0x8],r6
80001732:	0e 9c       	mov	r12,r7
80001734:	f0 1f 00 02 	mcall	8000173c <_free_r+0x19c>
80001738:	d8 22       	popm	r4-r7,pc
8000173a:	00 00       	add	r0,r0
8000173c:	80 00       	ld.sh	r0,r0[0x0]
8000173e:	14 80       	andn	r0,r10

Disassembly of section .exception:

80001800 <_evba>:
	...

80001828 <_handle_Privilege_Violation>:
80001828:	c7 a8       	rjmp	8000191c <privilegedCalls>
	...

80001900 <_handle_Supervisor_Call>:
80001900:	1c 9f       	mov	pc,lr

80001902 <_int0>:
80001902:	e0 6c 08 00 	mov	r12,2048
80001906:	ea 1c ff ff 	orh	r12,0xffff
8000190a:	f8 fc 01 38 	ld.w	r12,r12[312]
8000190e:	e0 1c 00 01 	andl	r12,0x1
80001912:	58 1c       	cp.w	r12,1
80001914:	c0 31       	brne	8000191a <_int0_exit>
80001916:	4b 9c       	lddpc	r12,800019f8 <contextRestoreFromISR+0x40>
80001918:	18 9f       	mov	pc,r12

8000191a <_int0_exit>:
8000191a:	d6 03       	rete

8000191c <privilegedCalls>:
8000191c:	d3 01       	pushm	r11-r12
8000191e:	7a 3b       	ld.w	r11,sp[0xc]
80001920:	16 9c       	mov	r12,r11
80001922:	2f ec       	sub	r12,-2
80001924:	9b 3c       	st.w	sp[0xc],r12

80001926 <priv_interruptdisable>:
80001926:	4b 6c       	lddpc	r12,800019fc <contextRestoreFromISR+0x44>
80001928:	18 3b       	cp.w	r11,r12
8000192a:	c0 61       	brne	80001936 <priv_interruptenable>
8000192c:	7a 2c       	ld.w	r12,sp[0x8]
8000192e:	b1 ac       	sbr	r12,0x10
80001930:	9b 2c       	st.w	sp[0x8],r12
80001932:	d3 02       	popm	r11-r12
80001934:	d6 03       	rete

80001936 <priv_interruptenable>:
80001936:	4b 3c       	lddpc	r12,80001a00 <contextRestoreFromISR+0x48>
80001938:	18 3b       	cp.w	r11,r12
8000193a:	c0 61       	brne	80001946 <privexception>
8000193c:	7a 2c       	ld.w	r12,sp[0x8]
8000193e:	b1 cc       	cbr	r12,0x10
80001940:	9b 2c       	st.w	sp[0x8],r12
80001942:	d3 02       	popm	r11-r12
80001944:	d6 03       	rete

80001946 <privexception>:
80001946:	c0 08       	rjmp	80001946 <privexception>

80001948 <interruptInit>:
80001948:	d7 01       	pushm	r11-r12,lr
8000194a:	fe cb 00 48 	sub	r11,pc,72
8000194e:	4a ec       	lddpc	r12,80001a04 <contextRestoreFromISR+0x4c>
80001950:	18 1b       	sub	r11,r12
80001952:	30 0c       	mov	r12,0
80001954:	f7 ec 11 eb 	or	r11,r11,r12<<0x1e
80001958:	e0 6c 08 38 	mov	r12,2104
8000195c:	ea 1c ff ff 	orh	r12,0xffff
80001960:	99 0b       	st.w	r12[0x0],r11
80001962:	d7 02       	popm	r11-r12,lr
80001964:	1c 9f       	mov	pc,lr

80001966 <interruptDisable>:
80001966:	d3 03       	ssrf	0x10
80001968:	1c 9f       	mov	pc,lr

8000196a <interruptEnable>:
8000196a:	d5 03       	csrf	0x10
8000196c:	1c 9f       	mov	pc,lr

8000196e <isInterruptEnabled>:
8000196e:	e1 bc 00 00 	mfsr	r12,0x0
80001972:	b1 8c       	lsr	r12,0x10
80001974:	e0 1c 00 01 	andl	r12,0x1
80001978:	ec 1c 00 01 	eorl	r12,0x1
8000197c:	1c 9f       	mov	pc,lr

8000197e <contextSaveFromISR>:
8000197e:	4a 3c       	lddpc	r12,80001a08 <contextRestoreFromISR+0x50>
80001980:	78 0c       	ld.w	r12,r12[0x0]
80001982:	99 60       	st.w	r12[0x18],r0
80001984:	7a 90       	ld.w	r0,sp[0x24]
80001986:	99 c0       	st.w	r12[0x30],r0
80001988:	7a 60       	ld.w	r0,sp[0x18]
8000198a:	99 80       	st.w	r12[0x20],r0
8000198c:	7a d8       	ld.w	r8,sp[0x34]
8000198e:	7a c9       	ld.w	r9,sp[0x30]
80001990:	7a ba       	ld.w	r10,sp[0x2c]
80001992:	7a ab       	ld.w	r11,sp[0x28]
80001994:	33 40       	mov	r0,52
80001996:	18 00       	add	r0,r12
80001998:	ed c0 0f ff 	stmts	r0,r0-r11
8000199c:	7a 50       	ld.w	r0,sp[0x14]
8000199e:	f9 40 00 44 	st.w	r12[68],r0
800019a2:	7a 70       	ld.w	r0,sp[0x1c]
800019a4:	99 90       	st.w	r12[0x24],r0
800019a6:	7a 80       	ld.w	r0,sp[0x20]
800019a8:	99 a0       	st.w	r12[0x28],r0
800019aa:	1a 90       	mov	r0,sp
800019ac:	1a d0       	st.w	--sp,r0
800019ae:	ed cd 20 00 	stmts	sp,sp
800019b2:	1b 00       	ld.w	r0,sp++
800019b4:	99 50       	st.w	r12[0x14],r0
800019b6:	1c 9f       	mov	pc,lr

800019b8 <contextRestoreFromISR>:
800019b8:	49 4c       	lddpc	r12,80001a08 <contextRestoreFromISR+0x50>
800019ba:	78 0c       	ld.w	r12,r12[0x0]
800019bc:	78 50       	ld.w	r0,r12[0x14]
800019be:	1a d0       	st.w	--sp,r0
800019c0:	e5 cd 20 00 	ldmts	sp,sp
800019c4:	1b 00       	ld.w	r0,sp++
800019c6:	78 a0       	ld.w	r0,r12[0x28]
800019c8:	9b 80       	st.w	sp[0x20],r0
800019ca:	78 90       	ld.w	r0,r12[0x24]
800019cc:	9b 70       	st.w	sp[0x1c],r0
800019ce:	33 40       	mov	r0,52
800019d0:	18 00       	add	r0,r12
800019d2:	e5 c0 0f ff 	ldmts	r0,r0-r11
800019d6:	78 80       	ld.w	r0,r12[0x20]
800019d8:	9b 60       	st.w	sp[0x18],r0
800019da:	78 c0       	ld.w	r0,r12[0x30]
800019dc:	9b 90       	st.w	sp[0x24],r0
800019de:	9b ab       	st.w	sp[0x28],r11
800019e0:	9b ba       	st.w	sp[0x2c],r10
800019e2:	9b c9       	st.w	sp[0x30],r9
800019e4:	9b d8       	st.w	sp[0x34],r8
800019e6:	79 10       	ld.w	r0,r12[0x44]
800019e8:	9b 50       	st.w	sp[0x14],r0
800019ea:	78 60       	ld.w	r0,r12[0x18]
800019ec:	d4 01       	pushm	lr
800019ee:	f0 1f 00 08 	mcall	80001a0c <contextRestoreFromISR+0x54>
800019f2:	d4 02       	popm	lr
800019f4:	1c 9f       	mov	pc,lr
800019f6:	00 00       	add	r0,r0
800019f8:	80 00       	ld.sh	r0,r0[0x0]
800019fa:	07 f4       	ld.ub	r4,r3[0x7]
800019fc:	80 00       	ld.sh	r0,r0[0x0]
800019fe:	19 66       	ld.uh	r6,--r12
80001a00:	80 00       	ld.sh	r0,r0[0x0]
80001a02:	19 6a       	ld.uh	r10,--r12
80001a04:	80 00       	ld.sh	r0,r0[0x0]
80001a06:	18 00       	add	r0,r12
80001a08:	00 00       	add	r0,r0
80001a0a:	05 9c       	ld.ub	r12,r2[0x1]
80001a0c:	80 00       	ld.sh	r0,r0[0x0]
80001a0e:	0e 6e       	and	lr,r7
	...
